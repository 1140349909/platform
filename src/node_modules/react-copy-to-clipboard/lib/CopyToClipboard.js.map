{"version":3,"sources":["../src/CopyToClipboard.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;AAGA,IAAM,kBAAkB,gBAAM,WAAN,CAAkB;AAAA;;AACxC,aAAW;AACT,UAAM,gBAAM,SAAN,CAAgB,MAAhB,CAAuB,UADpB;AAET,cAAU,gBAAM,SAAN,CAAgB,OAAhB,CAAwB,UAFzB;AAGT,YAAQ,gBAAM,SAAN,CAAgB,IAHf;AAIT,aAAS,gBAAM,SAAN,CAAgB,KAAhB,CAAsB;AAC7B,aAAO,gBAAM,SAAN,CAAgB,IADM;AAE7B,eAAS,gBAAM,SAAN,CAAgB;AAFI,KAAtB;AAJA,GAD6B;;AAYxC,SAZwC,mBAYhC,KAZgC,EAYzB;AAAA,iBAC6B,KAAK,KADlC;AAAA,QACN,IADM,UACN,IADM;AAAA,QACA,MADA,UACA,MADA;AAAA,QACQ,QADR,UACQ,QADR;AAAA,QACkB,OADlB,UACkB,OADlB;;AAEb,QAAM,OAAO,gBAAM,QAAN,CAAe,IAAf,CAAoB,QAApB,CAAb;;AAEA,mCAAK,IAAL,EAAW,OAAX;AACA,QAAI,MAAJ,EAAY;AACV,aAAO,IAAP;AACD;;;AAGD,QAAI,QAAQ,KAAK,KAAb,IAAsB,OAAO,KAAK,KAAL,CAAW,OAAlB,KAA8B,UAAxD,EAAoE;AAClE,WAAK,KAAL,CAAW,OAAX,CAAmB,KAAnB;AACD;AACF,GAzBuC;AA4BxC,QA5BwC,oBA4B/B;AAAA,kBAOH,KAAK,KAPF;AAAA,QAEC,KAFD,WAEL,IAFK;AAAA,QAGG,OAHH,WAGL,MAHK;AAAA,QAII,QAJJ,WAIL,OAJK;AAAA,QAKL,QALK,WAKL,QALK;;AAAA,QAMF,KANE;;AAQP,QAAM,OAAO,gBAAM,QAAN,CAAe,IAAf,CAAoB,QAApB,CAAb;;AAEA,WAAO,gBAAM,YAAN,CAAmB,IAAnB,eAA6B,KAA7B,IAAoC,SAAS,KAAK,OAAlD,IAAP;AACD;AAvCuC,CAAlB,CAAxB;;kBA2Ce,e","file":"CopyToClipboard.js","sourcesContent":["import React from 'react';\nimport copy from 'copy-to-clipboard';\n\n\nconst CopyToClipboard = React.createClass({\n  propTypes: {\n    text: React.PropTypes.string.isRequired,\n    children: React.PropTypes.element.isRequired,\n    onCopy: React.PropTypes.func,\n    options: React.PropTypes.shape({\n      debug: React.PropTypes.bool,\n      message: React.PropTypes.string\n    })\n  },\n\n\n  onClick(event) {\n    const {text, onCopy, children, options} = this.props;\n    const elem = React.Children.only(children);\n\n    copy(text, options);\n    if (onCopy) {\n      onCopy(text);\n    }\n\n    // Bypass onClick if it was present\n    if (elem && elem.props && typeof elem.props.onClick === 'function') {\n      elem.props.onClick(event);\n    }\n  },\n\n\n  render() {\n    const {\n      text: _text,\n      onCopy: _onCopy,\n      options: _options,\n      children,\n      ...props\n    } = this.props;\n    const elem = React.Children.only(children);\n\n    return React.cloneElement(elem, {...props, onClick: this.onClick});\n  }\n});\n\n\nexport default CopyToClipboard;\n"]}