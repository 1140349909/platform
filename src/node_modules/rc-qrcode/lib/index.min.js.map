{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///index.min.js","webpack:///webpack/bootstrap 11bb02e5b5e099022f63","webpack:///./src/index.js","webpack:///external {\"root\":\"React\",\"var\":\"window.React\",\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\"}","webpack:///./src/qrcode.js"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_1__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","getQRVersion","text","ecl","UTF8Array","length","eci","QRErrorCorrectLevel","L","M","Q","H","capacity","version","i","j","QRCapacityTable","Error","_createClass","defineProperties","target","props","descriptor","defineProperty","key","protoProps","staticProps","React","_require","QRCode","SUPPORT_CANVAS","document","createElement","getContext","SUPPORT_SVG","createElementNS","createSVGRect","ReactQRCode","_React$Component","getPrototypeOf","apply","arguments","renderer","render","CanvasQRCode","SvgQRCode","Component","_React$Component2","qrcode","content","addData","make","nextProps","count","getModuleCount","scale","margin","size","rects","x","y","width","height","style","fill","background","shapeRendering","currenty","currentx","row","col","isDark","push","foreground","xmlns","_React$Component3","draw","canvas","ReactDOM","findDOMNode","ctx","clearRect","fillStyle","fillRect","defaultProps","propTypes","PropTypes","oneOf","string","oneOfType","number","typeNumber","errorCorrectLevel","moduleCount","dataCache","dataList","QRDataArray","QR8bitByte","data","mode","QRMode","MODE_8BIT_BYTE","parsedData","QRPolynomial","num","shift","undefined","offset","Array","QRRSBlock","totalCount","dataCount","QRBitBuffer","buffer","source","isArray","Uint8Array","from_utf","str","code","arr","len","fixed_cca","codepoint_to_bytes","byte_count","prefix","_byte","pos","copy_code","bit_count","Math","ceil","idx","lo","hi","charCodeAt","isNaN","Uint32Array","newData","makeImpl","getBestMaskPattern","test","maskPattern","setupPositionProbePattern","setupPositionAdjustPattern","setupTimingPattern","setupTypeInfo","setupTypeNumber","createData","mapData","r","minLostPoint","pattern","lostPoint","QRUtil","getLostPoint","getPatternPosition","bits","getBCHTypeNumber","mod","floor","getBCHTypeInfo","inc","bitIndex","byteIndex","dark","mask","getMask","PAD0","PAD1","rsBlocks","getRSBlocks","put","getLength","getLengthInBits","write","totalDataCount","putBit","createBytes","maxDcCount","maxEcCount","dcdata","ecdata","dcCount","ecCount","max","rsPoly","getErrorCorrectPolynomial","rawPoly","modPoly","modIndex","get","totalCodeCount","index","l","MODE_NUMBER","MODE_ALPHA_NUM","MODE_KANJI","QRMaskPattern","PATTERN000","PATTERN001","PATTERN010","PATTERN011","PATTERN100","PATTERN101","PATTERN110","PATTERN111","PATTERN_POSITION_TABLE","G15","G18","G15_MASK","d","getBCHDigit","digit","errorCorrectLength","a","multiply","QRMath","gexp","type","qrCode","sameCount","darkCount","ratio","abs","glog","n","LOG_TABLE","EXP_TABLE","e","RS_BLOCK_TABLE","rsBlock","getRsBlockTable","list","bufIndex","bit"],"mappings":"CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,EAAAG,QAAA,UACA,kBAAAC,gBAAAC,IACAD,QAAA,SAAAJ,GACA,gBAAAC,SACAA,QAAA,YAAAD,EAAAG,QAAA,UAEAJ,EAAA,YAAAC,EAAAD,EAAA,QACCO,KAAA,SAAAC,GACD,MCAgB,UAAUC,GCN1B,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAT,OAGA,IAAAC,GAAAS,EAAAD,IACAT,WACAW,GAAAF,EACAG,QAAA,EAUA,OANAL,GAAAE,GAAAI,KAAAZ,EAAAD,QAAAC,IAAAD,QAAAQ,GAGAP,EAAAW,QAAA,EAGAX,EAAAD,QAvBA,GAAAU,KAqCA,OATAF,GAAAM,EAAAP,EAGAC,EAAAO,EAAAL,EAGAF,EAAAQ,EAAA,GAGAR,EAAA,KDgBM,SAASP,EAAQD,EAASQ,GAE/B,YAIA,SAASS,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAEhH,QAASC,GAA2BC,EAAMT,GAAQ,IAAKS,EAAQ,KAAM,IAAIC,gBAAe,4DAAgE,QAAOV,GAAyB,gBAATA,IAAqC,kBAATA,GAA8BS,EAAPT,EAElO,QAASW,GAAUC,EAAUC,GAAc,GAA0B,kBAAfA,IAA4C,OAAfA,EAAuB,KAAM,IAAIN,WAAU,iEAAoEM,GAAeD,GAASE,UAAYC,OAAOC,OAAOH,GAAcA,EAAWC,WAAaG,aAAeC,MAAON,EAAUO,YAAY,EAAOC,UAAU,EAAMC,cAAc,KAAeR,IAAYE,OAAOO,eAAiBP,OAAOO,eAAeV,EAAUC,GAAcD,EAASW,UAAYV,GE1Dle,QAASW,GAAaC,EAAMC,GAAK,IAMxB,GALDxB,GAAIyB,EAAUF,GAAMG,OACpBC,GAAOC,EAAoBC,EAAGD,EAAoBE,EAAGF,EAAoBG,EAAGH,EAAoBI,GAChGC,EAAW,EAAGC,EAAA,OAGTC,EAAE,EAAEC,EAAEC,EAAgBX,OAASU,EAAFD,EAAIA,IAEtC,GADAF,EAAWI,EAAgBF,GAAGR,EAAIH,IAC9BxB,EAAIqC,EAAgBF,GAAGR,EAAIH,IAAO,CAClCU,EAAUC,EAAI,CACd,OAQR,GAJKD,IACDA,EAAUG,EAAgBX,OAAS,GAGxB1B,EAAXiC,EACA,KAAM,IAAIK,OAAM,mBAGpB,OAAOJ,GF8BV,GAAIK,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIP,GAAI,EAAGA,EAAIO,EAAMhB,OAAQS,IAAK,CAAE,GAAIQ,GAAaD,EAAMP,EAAIQ,GAAW1B,WAAa0B,EAAW1B,aAAc,EAAO0B,EAAWxB,cAAe,EAAU,SAAWwB,KAAYA,EAAWzB,UAAW,GAAML,OAAO+B,eAAeH,EAAQE,EAAWE,IAAKF,IAAiB,MAAO,UAAUvC,EAAa0C,EAAYC,GAAiJ,MAA9HD,IAAYN,EAAiBpC,EAAYQ,UAAWkC,GAAiBC,GAAaP,EAAiBpC,EAAa2C,GAAqB3C,ME1D3hB4C,EAAQvD,EAAQ,GFoEjBwD,EEnE6DxD,EAAQ,GAAnEyD,EAAAD,EAAAC,OAAQtB,EAAAqB,EAAArB,oBAAqBS,EAAAY,EAAAZ,gBAAiBZ,EAAAwB,EAAAxB,UAE/C0B,IAAmBC,SAASC,cAAc,UAAUC,WACpDC,KAAiBH,SAASI,kBAAmBJ,SAASI,gBAAgB,6BAA8B,OAAOC,eA2B3GC,EAAA,SAAAC,GF6ED,QAASD,KAGL,MAFAxD,GAAgBZ,KAAMoE,GAEfpD,EAA2BhB,KAAMuB,OAAO+C,eAAeF,GAAaG,MAAMvE,KAAMwE,YAkB3F,MAvBArD,GAAUiD,EAAaC,GAQvBpB,EAAamB,IACTb,IAAK,SACL7B,MAAO,WEnFR,GAAI+C,GAAWzE,KAAKoD,MAAMsB,QAAU1E,KAAKoD,MAAMqB,QAI/C,OAHKA,IAAyB,SAAbA,IACbA,EAAWR,EAAc,MAASJ,EAAiB,SAAW,IAEjD,WAAbY,EACOf,EAAAK,cAACY,EAAiB3E,KAAKoD,OAEvBM,EAAAK,cAACa,EAAc5E,KAAKoD,WATjCgB,GAAoBV,EAAMmB,WAc1BD,EAAA,SAAAE,GF0FD,QAASF,KAGL,MAFAhE,GAAgBZ,KAAM4E,GAEf5D,EAA2BhB,KAAMuB,OAAO+C,eAAeM,GAAWL,MAAMvE,KAAMwE,YAoDzF,MAzDArD,GAAUyD,EAAWE,GAQrB7B,EAAa2B,IACTrB,IAAK,qBACL7B,MAAO,WEhGR1B,KAAK+E,OAAS,GAAInB,GAAO5B,EAAahC,KAAKoD,MAAM4B,QAAS1C,EAAoBE,GAAIF,EAAoBE,GACtGxC,KAAK+E,OAAOE,QAAQjF,KAAKoD,MAAM4B,SAC/BhF,KAAK+E,OAAOG,UFoGX3B,IAAK,4BACL7B,MAAO,SEnGcyD,GAClBA,EAAUH,UAAYhF,KAAKoD,MAAM4B,UACjChF,KAAK+E,OAAS,GAAInB,GAAO5B,EAAamD,EAAUH,QAAS1C,EAAoBE,GAAIF,EAAoBE,GACrGxC,KAAK+E,OAAOE,QAAQE,EAAUH,SAC9BhF,KAAK+E,OAAOG,WFuGf3B,IAAK,SACL7B,MAAO,WEzFR,IAAK,GAVD0B,GAAQpD,KAAKoD,MACb2B,EAAS/E,KAAK+E,OACdK,EAAQL,EAAOM,iBACfC,GAASlC,EAAMkC,OAAS,EACxBC,GAAUnC,EAAMmC,QAAU,GAC1BC,EAAOJ,EAAQE,EAAiB,EAATC,EAEvBE,GAAS/B,EAAAK,cAAA,QAAMR,IAAI,aAAamC,EAAE,IAAIC,EAAE,IAAIC,MAAOJ,EAAMK,OAAQL,EAAMM,OAAQC,KAAO3C,EAAM4C,WAAYC,eAAe,iBAEvHC,EAAWX,EAAQY,EAAA,OACdC,EAAM,EAAShB,EAANgB,EAAaA,IAAO,CAClCD,EAAWZ,CACX,KAAK,GAAIc,GAAM,EAASjB,EAANiB,EAAaA,IACvBtB,EAAOuB,OAAOF,EAAKC,IACnBZ,EAAMc,KAAK7C,EAAAK,cAAA,QAAMR,IAAM6C,EAAM,IAAMC,EAAMX,EAAGS,EAAUR,EAAGO,EAAUN,MAAON,EAAOO,OAAQP,EAAOQ,OAAQC,KAAO3C,EAAMoD,WAAYP,eAAe,iBAEpJE,GAAYb,CAEhBY,IAAYZ,EAGhB,MAAO5B,GAAAK,cFsGE,OEtGG0C,MAAM,6BAA6B7D,QAAQ,MAAMgD,MAAOJ,EAAMK,OAAQL,GAAOC,OApC3Fb,GAAkBlB,EAAMmB,WAwCxBF,EAAA,SAAA+B,GF+GD,QAAS/B,KAGL,MAFA/D,GAAgBZ,KAAM2E,GAEf3D,EAA2BhB,KAAMuB,OAAO+C,eAAeK,GAAcJ,MAAMvE,KAAMwE,YAqE5F,MA1EArD,GAAUwD,EAAc+B,GAQxBzD,EAAa0B,IACTpB,IAAK,qBACL7B,MAAO,WErHR1B,KAAK+E,OAAS,GAAInB,GAAO5B,EAAahC,KAAKoD,MAAM4B,QAAS1C,EAAoBE,GAAIF,EAAoBE,GACtGxC,KAAK+E,OAAOE,QAAQjF,KAAKoD,MAAM4B,SAC/BhF,KAAK+E,OAAOG,UFyHX3B,IAAK,4BACL7B,MAAO,SExHcyD,GAClBA,EAAUH,UAAYhF,KAAKoD,MAAM4B,UACjChF,KAAK+E,OAAS,GAAInB,GAAO5B,EAAamD,EAAUH,QAAS1C,EAAoBE,GAAIF,EAAoBE,GACrGxC,KAAK+E,OAAOE,QAAQE,EAAUH,SAC9BhF,KAAK+E,OAAOG,WF4Hf3B,IAAK,oBACL7B,MAAO,WExHR1B,KAAK2G,UF4HJpD,IAAK,qBACL7B,MAAO,WEzHR1B,KAAK2G,UF6HJpD,IAAK,OACL7B,MAAO,WE1HR,GAAI0B,GAAQpD,KAAKoD,MACb2B,EAAS/E,KAAK+E,OACd6B,EAASC,SAASC,YAAY9G,MAC9B+G,EAAMH,EAAO5C,WAAW,MACxBoB,EAAQL,EAAOM,iBACfC,GAASlC,EAAMkC,OAAS,EACxBC,GAAUnC,EAAMmC,QAAU,GAC1BC,EAAOJ,EAAQE,EAAiB,EAATC,CAE3BwB,GAAIC,UAAU,EAAG,EAAGJ,EAAOhB,MAAOgB,EAAOf,QACzCe,EAAOd,MAAMD,OAASe,EAAOf,OAASL,EACtCoB,EAAOd,MAAMF,MAAQgB,EAAOhB,MAAQJ,EACpCuB,EAAIE,UAAY7D,EAAM4C,WACtBe,EAAIG,SAAS,EAAG,EAAG1B,EAAMA,GAEzBuB,EAAIE,UAAY7D,EAAMoD,UAhBnB,KAmBE,GAFDN,GAAWX,EAAQY,EAAA,OAEdC,EAAM,EAAShB,EAANgB,EAAaA,IAAO,CAClCD,EAAWZ,CACX,KAAK,GAAIc,GAAM,EAASjB,EAANiB,EAAaA,IACvBtB,EAAOuB,OAAOF,EAAKC,IACnBU,EAAIG,SAASf,EAAUD,EAAUZ,EAAOA,GAE5Ca,GAAYb,CAEhBY,IAAYZ,MFgIf/B,IAAK,SACL7B,MAAO,WE5HR,MAAOgC,GAAAK,cAAA,mBAtDTY,GAAqBjB,EAAMmB,UA0DjCT,GAAY+C,cACR1C,SAAU,SACVO,QAAS,GACTM,MAAO,EACPC,OAAQ,GACRS,WAAY,QACZQ,WAAY,SAGhBpC,EAAYgD,WACR3C,SAAUf,EAAM2D,UAAUC,OAAO,SAAU,MAAO,SAClDtC,QAAStB,EAAM2D,UAAUE,OACzBjC,MAAO5B,EAAM2D,UAAUG,WACnB9D,EAAM2D,UAAUI,OAChB/D,EAAM2D,UAAUE,SAEpBhC,OAAQ7B,EAAM2D,UAAUG,WACpB9D,EAAM2D,UAAUI,OAChB/D,EAAM2D,UAAUE,SAEpBvB,WAAYtC,EAAM2D,UAAUE,OAC5Bf,WAAY9C,EAAM2D,UAAUE,QAGhC3H,EAAOD,QAAUyE,GF8HX,SAASxE,EAAQD,GGrSvBC,EAAAD,QAAAM,GH2SM,SAASL,EAAQD,GAEtB,YItQD,SAASiE,GAAO8D,EAAYC,GACxB3H,KAAK0H,WAAaA,EAClB1H,KAAK2H,kBAAoBA,EACzB3H,KAAKE,QAAU,KACfF,KAAK4H,YAAc,EACnB5H,KAAK6H,UAAY,KACjB7H,KAAK8H,SAAW,GAAIC,GA2XxB,QAASC,GAAWC,GAChBjI,KAAKkI,KAAOC,EAAOC,eACnBpI,KAAKiI,KAAOA,EACZjI,KAAKqI,WAAalG,EAAU8F,GAyYhC,QAASK,GAAaC,EAAKC,GAEvB,GAAkBC,QAAdF,EAAInG,OACJ,KAAM,IAAIY,OAAMuF,EAAInG,OAAS,IAAMoG,EAKvC,KAFA,GAAIE,GAAS,EAENA,EAASH,EAAInG,QAAyB,GAAfmG,EAAIG,IAC9BA,GAGJ1I,MAAKuI,IAAM,GAAII,OAAMJ,EAAInG,OAASsG,EAASF,EAC3C,KAAK,GAAI3F,GAAI,EAAGA,EAAI0F,EAAInG,OAASsG,EAAQ7F,IACrC7C,KAAKuI,IAAI1F,GAAK0F,EAAI1F,EAAI6F,GAsD9B,QAASE,GAAUC,EAAYC,GAC3B9I,KAAK6I,WAAaA,EAClB7I,KAAK8I,UAAYA,EAmQrB,QAASC,KACL/I,KAAKgJ,OAAS,GAAIL,OAClB3I,KAAKoC,OAAS,EA8ElB,QAASD,GAAU8G,GACf,MAAIN,OAAMO,QAAQD,GACP,GAAIE,YAAWF,GAGnBG,EAASH,GAKpB,QAASG,GAASC,GAGd,IAAK,GAFSC,GAAVC,KAEK1G,EAAI,EAAG2G,EAAMH,EAAIjH,OAAYoH,EAAJ3G,IAAWA,EACzCyG,EAAOG,EAAUJ,EAAKxG,GAElByG,KAAS,IAIF,IAAPA,EACAC,EAAIA,EAAInH,QAAUkH,EAKtBI,EAAmBH,EAAKD,GAG5B,OAAO,IAAIH,YAAWI,GAG1B,QAASG,GAAmBH,EAAKD,GAE7B,GAEMK,GACAC,EACAC,EACAC,EALFC,EAAYT,EACVU,EAAY,CAMlB,KACMA,QACGD,KAAe,EAUxB,KARAJ,EAA8C,EAAjCM,KAAKC,MAAMF,EAAY,GAAK,GACzCJ,GAAU,EAAG,EAAG,IAAM,IAAM,IAAM,IAAM,KAAMD,GAC9CG,GAAO,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGH,GAE5BE,GAASD,EAETI,EAAY,EAAKF,EAAO,GAAKH,EAAa,GAEnCK,GACHH,OAAaP,EAAQ,GAAKU,IAAgB,EAAIF,IAC5CA,EAEEA,EAAM,IAAM,IACZP,EAAIA,EAAInH,QAAUyH,EAClBA,EAAQ,IACRC,EAAM,KAGRE,CAGFF,KACAD,OAAoB,EAAPP,IAAc,EAAIQ,EAC/BP,EAAIA,EAAInH,QAAUyH,GAI1B,QAASJ,GAAUJ,EAAKc,GACpBA,EAAMA,GAAO,CAEb,IACMC,GACAC,EAFFf,EAAOD,EAAIiB,WAAWH,EAI1B,IAAcb,GAAV,OAA0B,OAARA,EAAgB,CAIlC,GAHAc,EAAKf,EAAIiB,WAAWH,EAAM,GAC1BE,EAAKf,EAEDiB,MAAMH,GACN,KAAM,IAAIpH,OAAM,+CAGpB,OAAwB,OAAfqH,EAAK,QAAoBD,EAAK,OAAU,MAGrD,MAAcd,IAAV,OAA0B,OAARA,GACX,EAGJA,EAxwCX3J,EAAQiE,OAASA,CAEjB,IAAImE,GAAqC,mBAAfyC,aAA6BA,YAAc7B,KAWrE/E,GAAOtC,WAEH2D,QAAS,SAAUgD,GACf,GAAIwC,GAAU,GAAIzC,GAAWC,EAE7BjI,MAAK8H,SAASvB,KAAKkE,GACnBzK,KAAK6H,UAAY,MAGrBvB,OAAQ,SAAUF,EAAKC,GACnB,GAAU,EAAND,GAAWpG,KAAK4H,aAAexB,GAAa,EAANC,GAAWrG,KAAK4H,aAAevB,EACrE,KAAM,IAAIrD,OAAMoD,EAAM,IAAMC,EAEhC,OAAOrG,MAAKE,QAAQkG,GAAKC,IAG7BhB,eAAgB,WACZ,MAAOrF,MAAK4H,aAGhB1C,KAAM,WACFlF,KAAK0K,UAAS,EAAO1K,KAAK2K,uBAG9BD,SAAU,SAAUE,EAAMC,GAEtB7K,KAAK4H,YAAgC,EAAlB5H,KAAK0H,WAAiB,GACzC1H,KAAKE,QAAU,GAAI6H,GAAY/H,KAAK4H,YAEpC,KAAK,GAAIxB,GAAM,EAAGA,EAAMpG,KAAK4H,YAAaxB,IAAO,CAE7CpG,KAAKE,QAAQkG,GAAO,GAAI2B,GAAY/H,KAAK4H,YAEzC,KAAK,GAAIvB,GAAM,EAAGA,EAAMrG,KAAK4H,YAAavB,IACtCrG,KAAKE,QAAQkG,GAAKC,GAAO,KAIjCrG,KAAK8K,0BAA0B,EAAG,GAClC9K,KAAK8K,0BAA0B9K,KAAK4H,YAAc,EAAG,GACrD5H,KAAK8K,0BAA0B,EAAG9K,KAAK4H,YAAc,GACrD5H,KAAK+K,6BACL/K,KAAKgL,qBACLhL,KAAKiL,cAAcL,EAAMC,GAErB7K,KAAK0H,YAAc,GACnB1H,KAAKkL,gBAAgBN,GAGH,MAAlB5K,KAAK6H,YACL7H,KAAK6H,UAAYjE,EAAOuH,WAAWnL,KAAK0H,WAAY1H,KAAK2H,kBAAmB3H,KAAK8H,WAGrF9H,KAAKoL,QAAQpL,KAAK6H,UAAWgD,IAGjCC,0BAA2B,SAAU1E,EAAKC,GAEtC,IAAK,GAAIgF,GAAI,GAAS,GAALA,EAAQA,IAErB,KAAe,IAAXjF,EAAMiF,GAAWrL,KAAK4H,aAAexB,EAAMiF,GAE/C,IAAK,GAAI3K,GAAI,GAAS,GAALA,EAAQA,IAEN,IAAX2F,EAAM3F,GAAWV,KAAK4H,aAAevB,EAAM3F,IAErC2K,GAAN,GAAgB,GAALA,IAAgB,GAAL3K,GAAe,GAALA,IACvBA,GAAL,GAAe,GAALA,IAAgB,GAAL2K,GAAe,GAALA,IAC1BA,GAAL,GAAe,GAALA,GAAe3K,GAAL,GAAe,GAALA,EAClCV,KAAKE,QAAQkG,EAAMiF,GAAGhF,EAAM3F,IAAK,EAEjCV,KAAKE,QAAQkG,EAAMiF,GAAGhF,EAAM3F,IAAK,IAMjDiK,mBAAoB,WAKhB,IAAK,GAHDW,GAAe,EACfC,EAAU,EAEL1I,EAAI,EAAO,EAAJA,EAAOA,IAAK,CAExB7C,KAAK0K,UAAS,EAAM7H,EAEpB,IAAI2I,GAAYC,EAAOC,aAAa1L,OAE3B,GAAL6C,GAAUyI,EAAeE,KACzBF,EAAeE,EACfD,EAAU1I,GAIlB,MAAO0I,IAGXP,mBAAoB,WAEhB,IAAK,GAAIK,GAAI,EAAGA,EAAIrL,KAAK4H,YAAc,EAAGyD,IACZ,MAAtBrL,KAAKE,QAAQmL,GAAG,KAGpBrL,KAAKE,QAAQmL,GAAG,GAAMA,EAAI,GAAK,EAGnC,KAAK,GAAI3K,GAAI,EAAGA,EAAIV,KAAK4H,YAAc,EAAGlH,IACZ,MAAtBV,KAAKE,QAAQ,GAAGQ,KAGpBV,KAAKE,QAAQ,GAAGQ,GAAMA,EAAI,GAAK,IAIvCqK,2BAA4B,WAExB,GAAIjB,GAAM2B,EAAOE,mBAAmB3L,KAAK0H,WACzCoC,GAAMA,GAAO,EACb,KAAK,GAAIjH,GAAI,EAAGA,EAAIiH,EAAI1H,OAAQS,IAE5B,IAAK,GAAIC,GAAI,EAAGA,EAAIgH,EAAI1H,OAAQU,IAAK,CAEjC,GAAIsD,GAAM0D,EAAIjH,GACVwD,EAAMyD,EAAIhH,EAEd,IAA8B,MAA1B9C,KAAKE,QAAQkG,GAAKC,GAItB,IAAK,GAAIgF,GAAI,GAAS,GAALA,EAAQA,IAErB,IAAK,GAAI3K,GAAI,GAAS,GAALA,EAAQA,IAEZ,IAAL2K,GAAgB,GAALA,GAAe,IAAL3K,GAAgB,GAALA,GACvB,GAAL2K,GAAe,GAAL3K,EACdV,KAAKE,QAAQkG,EAAMiF,GAAGhF,EAAM3F,IAAK,EAEjCV,KAAKE,QAAQkG,EAAMiF,GAAGhF,EAAM3F,IAAK,IAQzDwK,gBAAiB,SAAUN,GAIvB,IAAK,GAFDgB,GAAOH,EAAOI,iBAAiB7L,KAAK0H,YAE/B7E,EAAI,EAAO,GAAJA,EAAQA,IAAK,CACzB,GAAIiJ,IAAQlB,GAA8B,IAApBgB,GAAS/I,EAAK,EACpC7C,MAAKE,QAAQ+J,KAAK8B,MAAMlJ,EAAI,IAAIA,EAAI,EAAI7C,KAAK4H,YAAc,EAAI,GAAKkE,EAGxE,IAAK,GAAIjJ,GAAI,EAAO,GAAJA,EAAQA,IAAK,CACzB,GAAIiJ,IAAQlB,GAA8B,IAApBgB,GAAS/I,EAAK,EACpC7C,MAAKE,QAAQ2C,EAAI,EAAI7C,KAAK4H,YAAc,EAAI,GAAGqC,KAAK8B,MAAMlJ,EAAI,IAAMiJ,IAI5Eb,cAAe,SAAUL,EAAMC,GAAa,IAMnC,GAJD5C,GAAOjI,KAAM2H,mBAAqB,EAAKkD,EACvCe,EAAOH,EAAOO,eAAe/D,GAGxBpF,EAAI,EAAO,GAAJA,EAAQA,IAAK,CAEzB,GAAIiJ,IAAQlB,GAA8B,IAApBgB,GAAS/I,EAAK,EAE5B,GAAJA,EACA7C,KAAKE,QAAQ2C,GAAG,GAAKiJ,EACV,EAAJjJ,EACP7C,KAAKE,QAAQ2C,EAAI,GAAG,GAAKiJ,EAEzB9L,KAAKE,QAAQF,KAAK4H,YAAc,GAAK/E,GAAG,GAAKiJ,EAfb,IAoBnC,GAAIjJ,GAAI,EAAO,GAAJA,EAAQA,IAAK,CAEzB,GAAIiJ,IAAQlB,GAA8B,IAApBgB,GAAS/I,EAAK,EAE5B,GAAJA,EACA7C,KAAKE,QAAQ,GAAGF,KAAK4H,YAAc/E,EAAI,GAAKiJ,EACjC,EAAJjJ,EACP7C,KAAKE,QAAQ,GAAG,GAAK2C,EAAI,EAAI,GAAKiJ,EAElC9L,KAAKE,QAAQ,GAAG,GAAK2C,EAAI,GAAKiJ,EA7BE9L,KAkCnCE,QAAQF,KAAK4H,YAAc,GAAG,IAAOgD,GAI9CQ,QAAS,SAAUnD,EAAM4C,GAOrB,IAAK,GALDoB,GAAM,GACN7F,EAAMpG,KAAK4H,YAAc,EACzBsE,EAAW,EACXC,EAAY,EAEP9F,EAAMrG,KAAK4H,YAAc,EAAGvB,EAAM,EAAGA,GAAO,EAIjD,IAFW,GAAPA,GAAUA,MAED,CAET,IAAK,GAAI3F,GAAI,EAAO,EAAJA,EAAOA,IAEnB,GAAkC,MAA9BV,KAAKE,QAAQkG,GAAKC,EAAM3F,GAAY,CAEpC,GAAI0L,IAAO,CAEPD,GAAYlE,EAAK7F,SACjBgK,EAAkD,IAAvCnE,EAAMkE,KAAeD,EAAY,GAGhD,IAAIG,GAAOZ,EAAOa,QAAQzB,EAAazE,EAAKC,EAAM3F,EAE9C2L,KACAD,GAAQA,GAGZpM,KAAKE,QAAQkG,GAAKC,EAAM3F,GAAK0L,EAC7BF,IAEgB,IAAZA,IACAC,IACAD,EAAW,GAOvB,GAFA9F,GAAO6F,EAEG,EAAN7F,GAAWpG,KAAK4H,aAAexB,EAAK,CACpCA,GAAO6F,EACPA,GAAOA,CACP,WASpBrI,EAAO2I,KAAO,IACd3I,EAAO4I,KAAO,GAEd5I,EAAOuH,WAAa,SAAUzD,EAAYC,EAAmBG,GAMzD,IAAK,GAJD2E,GAAW7D,EAAU8D,YAAYhF,EAAYC,GAE7CqB,EAAS,GAAID,GAERlG,EAAI,EAAGA,EAAIiF,EAAS1F,OAAQS,IAAK,CACtC,GAAIoF,GAAOH,EAASjF,EACpBmG,GAAO2D,IAAI1E,EAAKC,KAAM,GACtBc,EAAO2D,IAAI1E,EAAK2E,YAAanB,EAAOoB,gBAAgB5E,EAAKC,KAAMR,IAC/DO,EAAK6E,MAAM9D,GAKf,IAAK,GADD+D,GAAiB,EACZlK,EAAI,EAAGA,EAAI4J,EAASrK,OAAQS,IACjCkK,GAAkBN,EAAS5J,GAAGiG,SAGlC,IAAIE,EAAO6D,kBAAqC,EAAjBE,EAC3B,KAAM,IAAI/J,OAAM,0BACVgG,EAAO6D,kBACP,IACiB,EAAjBE,EACA,IAxByD,KA4B/D/D,EAAO6D,kBAAoB,GAAsB,EAAjBE,GAChC/D,EAAO2D,IAAI,EAAG,GAIX3D,EAAO6D,kBAAoB,GAAK,GACnC7D,EAAOgE,QAAO,EAlCiD,QAsCtD,CAET,GAAIhE,EAAO6D,mBAAsC,EAAjBE,EAC5B,KAIJ,IAFA/D,EAAO2D,IAAI/I,EAAO2I,KAAM,GAEpBvD,EAAO6D,mBAAsC,EAAjBE,EAC5B,KAEJ/D,GAAO2D,IAAI/I,EAAO4I,KAAM,GAG5B,MAAO5I,GAAOqJ,YAAYjE,EAAQyD,IAGtC7I,EAAOqJ,YAAc,SAAUjE,EAAQyD,GAUnC,IAAK,GARD/D,GAAS,EAETwE,EAAa,EACbC,EAAa,EAEbC,EAAS,GAAIrF,GAAY0E,EAASrK,QAClCiL,EAAS,GAAItF,GAAY0E,EAASrK,QAE7BiJ,EAAI,EAAGA,EAAIoB,EAASrK,OAAQiJ,IAAK,CAEtC,GAAIiC,GAAUb,EAASpB,GAAGvC,UACtByE,EAAUd,EAASpB,GAAGxC,WAAayE,CAEvCJ,GAAajD,KAAKuD,IAAIN,EAAYI,GAClCH,EAAalD,KAAKuD,IAAIL,EAAYI,GAElCH,EAAO/B,GAAK,GAAItD,GAAYuF,EAE5B,KAAK,GAAIzK,GAAI,EAAGA,EAAIuK,EAAO/B,GAAGjJ,OAAQS,IAClCuK,EAAO/B,GAAGxI,GAAK,IAAOmG,EAAOA,OAAOnG,EAAI6F,EAE5CA,IAAU4E,CAEV,IAAIG,GAAShC,EAAOiC,0BAA0BH,GAC1CI,EAAU,GAAIrF,GAAa8E,EAAO/B,GAAIoC,EAAOb,YAAc,GAE3DgB,EAAUD,EAAQ7B,IAAI2B,EAC1BJ,GAAOhC,GAAK,GAAItD,GAAY0F,EAAOb,YAAc,EACjD,KAAK,GAAI/J,GAAI,EAAGA,EAAIwK,EAAOhC,GAAGjJ,OAAQS,IAAK,CACvC,GAAIgL,GAAWhL,EAAI+K,EAAQhB,YAAcS,EAAOhC,GAAGjJ,MACnDiL,GAAOhC,GAAGxI,GAAKgL,GAAa,EAAKD,EAAQE,IAAID,GAAY,GAMjE,IAAK,GADDE,GAAiB,EACZlL,EAAI,EAAGA,EAAI4J,EAASrK,OAAQS,IACjCkL,GAAkBtB,EAAS5J,GAAGgG,UAMlC,KAAK,GAHDZ,GAAO,GAAIF,GAAYgG,GACvBC,EAAQ,EAEHnL,EAAI,EAAOqK,EAAJrK,EAAgBA,IAC5B,IAAK,GAAIwI,GAAI,EAAGA,EAAIoB,EAASrK,OAAQiJ,IAC7BxI,EAAIuK,EAAO/B,GAAGjJ,SACd6F,EAAK+F,KAAWZ,EAAO/B,GAAGxI,GAKtC,KAAK,GAAIA,GAAI,EAAOsK,EAAJtK,EAAgBA,IAC5B,IAAK,GAAIwI,GAAI,EAAGA,EAAIoB,EAASrK,OAAQiJ,IAC7BxI,EAAIwK,EAAOhC,GAAGjJ,SACd6F,EAAK+F,KAAWX,EAAOhC,GAAGxI,GAKtC,OAAOoF,IAaXD,EAAW1G,WACPsL,UAAW,SAAU5D,GACjB,MAAOhJ,MAAKqI,WAAWjG,QAE3B0K,MAAO,SAAU9D,GACb,IAAK,GAAInG,GAAI,EAAGoL,EAAIjO,KAAKqI,WAAWjG,OAAY6L,EAAJpL,EAAOA,IAC/CmG,EAAO2D,IAAI3M,KAAKqI,WAAWxF,GAAI,IA+W3C,KAAK,GArWDsF,IACA+F,YAAa,EACbC,eAAgB,EAChB/F,eAAgB,EAChBgG,WAAY,GAQZ9L,EAAsB3C,EAAQ2C,qBAC9BC,EAAG,EACHC,EAAG,EACHC,EAAG,EACHC,EAAG,GAOH2L,GACAC,WAAY,EACZC,WAAY,EACZC,WAAY,EACZC,WAAY,EACZC,WAAY,EACZC,WAAY,EACZC,WAAY,EACZC,WAAY,GAOZpD,GAEAqD,4BAEK,EAAG,KACH,EAAG,KACH,EAAG,KACH,EAAG,KACH,EAAG,KACH,EAAG,GAAI,KACP,EAAG,GAAI,KACP,EAAG,GAAI,KACP,EAAG,GAAI,KACP,EAAG,GAAI,KACP,EAAG,GAAI,KACP,EAAG,GAAI,KACP,EAAG,GAAI,GAAI,KACX,EAAG,GAAI,GAAI,KACX,EAAG,GAAI,GAAI,KACX,EAAG,GAAI,GAAI,KACX,EAAG,GAAI,GAAI,KACX,EAAG,GAAI,GAAI,KACX,EAAG,GAAI,GAAI,KACX,EAAG,GAAI,GAAI,GAAI,KACf,EAAG,GAAI,GAAI,GAAI,KACf,EAAG,GAAI,GAAI,GAAI,MACf,EAAG,GAAI,GAAI,GAAI,MACf,EAAG,GAAI,GAAI,GAAI,MACf,EAAG,GAAI,GAAI,GAAI,MACf,EAAG,GAAI,GAAI,GAAI,MACf,EAAG,GAAI,GAAI,GAAI,GAAI,MACnB,EAAG,GAAI,GAAI,GAAI,IAAK,MACpB,EAAG,GAAI,GAAI,GAAI,IAAK,MACpB,EAAG,GAAI,GAAI,GAAI,IAAK,MACpB,EAAG,GAAI,GAAI,GAAI,IAAK,MACpB,EAAG,GAAI,GAAI,GAAI,IAAK,MACpB,EAAG,GAAI,GAAI,GAAI,IAAK,MACpB,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,MACzB,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,MACzB,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,MACzB,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,MACzB,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,MACzB,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,MAG9BC,IAAK,KACLC,IAAK,KACLC,SAAU,MAEVjD,eAAgB,SAAU/D,GAEtB,IADA,GAAIiH,GAAIjH,GAAQ,GACTwD,EAAO0D,YAAYD,GAAKzD,EAAO0D,YAAY1D,EAAOsD,MAAQ,GAC7DG,GAAMzD,EAAOsD,KAAQtD,EAAO0D,YAAYD,GAAKzD,EAAO0D,YAAY1D,EAAOsD,IAE3E,QAAS9G,GAAS,GAAMiH,GAAKzD,EAAOwD,UAGxCpD,iBAAkB,SAAU5D,GAExB,IADA,GAAIiH,GAAIjH,GAAQ,GACTwD,EAAO0D,YAAYD,GAAKzD,EAAO0D,YAAY1D,EAAOuD,MAAQ,GAC7DE,GAAMzD,EAAOuD,KAAQvD,EAAO0D,YAAYD,GAAKzD,EAAO0D,YAAY1D,EAAOuD,IAE3E,OAAO/G,IAAS,GAAMiH,GAG1BC,YAAa,SAAUlH,GAInB,IAFA,GAAImH,GAAQ,EAEG,GAARnH,GACHmH,IACAnH,KAAU,CAGd,OAAOmH,IAGXzD,mBAAoB,SAAUjE,GAC1B,MAAO+D,GAAOqD,uBAAuBpH,EAAa,IAGtD4E,QAAS,SAAUzB,EAAahI,EAAGC,GAE/B,OAAQ+H,GAEJ,IAAKwD,GAAcC,WACf,OAAQzL,EAAIC,GAAK,GAAK,CAH9B,KAISuL,GAAcE,WACf,MAAO1L,GAAI,GAAK,CALxB,KAMSwL,GAAcG,WACf,MAAO1L,GAAI,GAAK,CAPxB,KAQSuL,GAAcI,WACf,OAAQ5L,EAAIC,GAAK,GAAK,CAT9B,KAUSuL,GAAcK,WACf,OAAQzE,KAAK8B,MAAMlJ,EAAI,GAAKoH,KAAK8B,MAAMjJ,EAAI,IAAO,GAAK,CAX/D,KAYSuL,GAAcM,WACf,MAAO9L,GAAKC,EAAK,EAAID,EAAKC,EAAK,GAAK,CAb5C,KAcSuL,GAAcO,WACf,OAAS/L,EAAKC,EAAK,EAAID,EAAKC,EAAK,GAAK,GAAK,CAfnD,KAgBSuL,GAAcQ,WACf,OAAShM,EAAKC,EAAK,GAAKD,EAAIC,GAAK,GAAK,GAAK,CAjBnD,SAoBQ,KAAM,IAAIE,OAAM,mBAAqB6H,KAIjD6C,0BAA2B,SAAU2B,GAIjC,IAAK,GAFDC,GAAI,GAAIhH,IAAc,GAAI,GAErBzF,EAAI,EAAOwM,EAAJxM,EAAwBA,IACpCyM,EAAIA,EAAEC,SAAS,GAAIjH,IAAc,EAAGkH,EAAOC,KAAK5M,IAAK,GAGzD,OAAOyM,IAGXzC,gBAAiB,SAAU3E,EAAMwH,GAE7B,GAASA,GAAL,GAAoB,GAAPA,EAIb,OAAQxH,GACJ,IAAKC,GAAO+F,YACR,MAAO,GAFf,KAGS/F,GAAOgG,eACR,MAAO,EAJf,KAKShG,GAAOC,eACR,MAAO,EANf,KAOSD,GAAOiG,WACR,MAAO,EARf,SAUQ,KAAM,IAAIpL,OAAM,QAAUkF,OAG/B,IAAW,GAAPwH,EAIP,OAAQxH,GACJ,IAAKC,GAAO+F,YACR,MAAO,GAFf,KAGS/F,GAAOgG,eACR,MAAO,GAJf,KAKShG,GAAOC,eACR,MAAO,GANf,KAOSD,GAAOiG,WACR,MAAO,GARf,SAUQ,KAAM,IAAIpL,OAAM,QAAUkF,OAG/B,MAAW,GAAPwH,GAkBP,KAAM,IAAI1M,OAAM,QAAU0M,EAd1B,QAAQxH,GACJ,IAAKC,GAAO+F,YACR,MAAO,GAFf,KAGS/F,GAAOgG,eACR,MAAO,GAJf,KAKShG,GAAOC,eACR,MAAO,GANf,KAOSD,GAAOiG,WACR,MAAO,GARf,SAUQ,KAAM,IAAIpL,OAAM,QAAUkF,MAQ1CwD,aAAc,SAAUiE,GAAQ,IAQvB,GAND/H,GAAc+H,EAAOtK,iBAErBmG,EAAY,EAIPpF,EAAM,EAASwB,EAANxB,EAAmBA,IAEjC,IAAK,GAAIC,GAAM,EAASuB,EAANvB,EAAmBA,IAAO,CAKxC,IAAK,GAHDuJ,GAAY,EACZxD,EAAOuD,EAAOrJ,OAAOF,EAAKC,GAErBgF,EAAI,GAAS,GAALA,EAAQA,IAErB,KAAc,EAAVjF,EAAMiF,GAAwBjF,EAAMiF,GAArBzD,GAInB,IAAK,GAAIlH,GAAI,GAAS,GAALA,EAAQA,IAEP,EAAV2F,EAAM3F,GAAwB2F,EAAM3F,GAArBkH,GAIV,GAALyD,GAAe,GAAL3K,GAIV0L,GAAQuD,EAAOrJ,OAAOF,EAAMiF,EAAGhF,EAAM3F,IACrCkP,GAKRA,GAAY,IACZpE,GAAc,EAAIoE,EAAY,GAtCd,IA6CvB,GAAIxJ,GAAM,EAASwB,EAAc,EAApBxB,EAAuBA,IACrC,IAAK,GAAIC,GAAM,EAASuB,EAAc,EAApBvB,EAAuBA,IAAO,CAC5C,GAAIjB,GAAQ,CACRuK,GAAOrJ,OAAOF,EAAKC,IAAMjB,IACzBuK,EAAOrJ,OAAOF,EAAM,EAAGC,IAAMjB,IAC7BuK,EAAOrJ,OAAOF,EAAKC,EAAM,IAAIjB,IAC7BuK,EAAOrJ,OAAOF,EAAM,EAAGC,EAAM,IAAIjB,IACxB,GAATA,GAAuB,GAATA,IACdoG,GAAa,GArDG,IA4DvB,GAAIpF,GAAM,EAASwB,EAANxB,EAAmBA,IACjC,IAAK,GAAIC,GAAM,EAASuB,EAAc,EAApBvB,EAAuBA,IACjCsJ,EAAOrJ,OAAOF,EAAKC,KACfsJ,EAAOrJ,OAAOF,EAAKC,EAAM,IAC1BsJ,EAAOrJ,OAAOF,EAAKC,EAAM,IACzBsJ,EAAOrJ,OAAOF,EAAKC,EAAM,IACzBsJ,EAAOrJ,OAAOF,EAAKC,EAAM,KACxBsJ,EAAOrJ,OAAOF,EAAKC,EAAM,IAC1BsJ,EAAOrJ,OAAOF,EAAKC,EAAM,KAC5BmF,GAAa,GAKzB,KAAK,GAAInF,GAAM,EAASuB,EAANvB,EAAmBA,IACjC,IAAK,GAAID,GAAM,EAASwB,EAAc,EAApBxB,EAAuBA,IACjCuJ,EAAOrJ,OAAOF,EAAKC,KACfsJ,EAAOrJ,OAAOF,EAAM,EAAGC,IACxBsJ,EAAOrJ,OAAOF,EAAM,EAAGC,IACvBsJ,EAAOrJ,OAAOF,EAAM,EAAGC,IACvBsJ,EAAOrJ,OAAOF,EAAM,EAAGC,KACtBsJ,EAAOrJ,OAAOF,EAAM,EAAGC,IACxBsJ,EAAOrJ,OAAOF,EAAM,EAAGC,KAC1BmF,GAAa,GASzB,KAAK,GAFDqE,GAAY,EAEPxJ,EAAM,EAASuB,EAANvB,EAAmBA,IACjC,IAAK,GAAID,GAAM,EAASwB,EAANxB,EAAmBA,IAC7BuJ,EAAOrJ,OAAOF,EAAKC,IACnBwJ,GAKZ,IAAIC,GAAQ7F,KAAK8F,IAAI,IAAMF,EAAYjI,EAAcA,EAAc,IAAM,CAGzE,OAFA4D,IAAqB,GAARsE,IAYjBN,GAEAQ,KAAM,SAAUC,GAEZ,GAAQ,EAAJA,EACA,KAAM,IAAIjN,OAAM,QAAUiN,EAAI,IAGlC,OAAOT,GAAOU,UAAUD,IAG5BR,KAAM,SAAUQ,GAEZ,KAAW,EAAJA,GACHA,GAAK,GAGT,MAAOA,GAAK,KACRA,GAAK,GAGT,OAAOT,GAAOW,UAAUF,IAG5BE,UAAW,GAAIxH,OAAM,KAErBuH,UAAW,GAAIvH,OAAM,MAIhB9F,EAAI,EAAO,EAAJA,EAAOA,IACnB2M,EAAOW,UAAUtN,GAAK,GAAKA,CAE/B,KAAK,GAAIA,GAAI,EAAO,IAAJA,EAASA,IACrB2M,EAAOW,UAAUtN,GAAK2M,EAAOW,UAAUtN,EAAI,GACrC2M,EAAOW,UAAUtN,EAAI,GACrB2M,EAAOW,UAAUtN,EAAI,GACrB2M,EAAOW,UAAUtN,EAAI,EAE/B,KAAK,GAAIA,GAAI,EAAO,IAAJA,EAASA,IACrB2M,EAAOU,UAAUV,EAAOW,UAAUtN,IAAMA,CAyB5CyF,GAAahH,WAETwM,IAAK,SAAUE,GACX,MAAOhO,MAAKuI,IAAIyF,IAGpBpB,UAAW,WACP,MAAO5M,MAAKuI,IAAInG,QAGpBmN,SAAU,SAAUa,GAIhB,IAAK,GAFD7H,GAAM,GAAII,OAAM3I,KAAK4M,YAAcwD,EAAExD,YAAc,GAE9C/J,EAAI,EAAGA,EAAI7C,KAAK4M,YAAa/J,IAClC,IAAK,GAAIC,GAAI,EAAGA,EAAIsN,EAAExD,YAAa9J,IAC/ByF,EAAI1F,EAAIC,IAAM0M,EAAOC,KAAKD,EAAOQ,KAAKhQ,KAAK8N,IAAIjL,IAAM2M,EAAOQ,KAAKI,EAAEtC,IAAIhL,IAI/E,OAAO,IAAIwF,GAAaC,EAAK,IAGjCuD,IAAK,SAAUsE,GAEX,GAAIpQ,KAAK4M,YAAcwD,EAAExD,YAAc,EACnC,MAAO5M,KAOX,KAAK,GAJD8P,GAAQN,EAAOQ,KAAKhQ,KAAK8N,IAAI,IAAM0B,EAAOQ,KAAKI,EAAEtC,IAAI,IAErDvF,EAAM,GAAII,OAAM3I,KAAK4M,aAEhB/J,EAAI,EAAGA,EAAI7C,KAAK4M,YAAa/J,IAClC0F,EAAI1F,GAAK7C,KAAK8N,IAAIjL,EAGtB,KAAK,GAAIA,GAAI,EAAGA,EAAIuN,EAAExD,YAAa/J,IAC/B0F,EAAI1F,IAAM2M,EAAOC,KAAKD,EAAOQ,KAAKI,EAAEtC,IAAIjL,IAAMiN,EAfpC,OAmBP,IAAIxH,GAAaC,EAAK,GAAGuD,IAAIsE,KAa5CxH,EAAUyH,iBAOL,EAAG,GAAI,KACP,EAAG,GAAI,KACP,EAAG,GAAI,KACP,EAAG,GAAI,IAEP,EAAG,GAAI,KACP,EAAG,GAAI,KACP,EAAG,GAAI,KACP,EAAG,GAAI,KAEP,EAAG,GAAI,KACP,EAAG,GAAI,KACP,EAAG,GAAI,KACP,EAAG,GAAI,KAEP,EAAG,IAAK,KACR,EAAG,GAAI,KACP,EAAG,GAAI,KACP,EAAG,GAAI,IAEP,EAAG,IAAK,MACR,EAAG,GAAI,KACP,EAAG,GAAI,GAAI,EAAG,GAAI,KAClB,EAAG,GAAI,GAAI,EAAG,GAAI,KAElB,EAAG,GAAI,KACP,EAAG,GAAI,KACP,EAAG,GAAI,KACP,EAAG,GAAI,KAEP,EAAG,GAAI,KACP,EAAG,GAAI,KACP,EAAG,GAAI,GAAI,EAAG,GAAI,KAClB,EAAG,GAAI,GAAI,EAAG,GAAI,KAElB,EAAG,IAAK,KACR,EAAG,GAAI,GAAI,EAAG,GAAI,KAClB,EAAG,GAAI,GAAI,EAAG,GAAI,KAClB,EAAG,GAAI,GAAI,EAAG,GAAI,KAElB,EAAG,IAAK,MACR,EAAG,GAAI,GAAI,EAAG,GAAI,KAClB,EAAG,GAAI,GAAI,EAAG,GAAI,KAClB,EAAG,GAAI,GAAI,EAAG,GAAI,KAElB,EAAG,GAAI,GAAI,EAAG,GAAI,KAClB,EAAG,GAAI,GAAI,EAAG,GAAI,KAClB,EAAG,GAAI,GAAI,EAAG,GAAI,KAClB,EAAG,GAAI,GAAI,EAAG,GAAI,KAIhB,EAAG,IAAK,KACR,EAAG,GAAI,GAAI,EAAG,GAAI,KAClB,EAAG,GAAI,GAAI,EAAG,GAAI,KAClB,EAAG,GAAI,GAAI,EAAG,GAAI,KAElB,EAAG,IAAK,GAAI,EAAG,IAAK,KACpB,EAAG,GAAI,GAAI,EAAG,GAAI,KAClB,EAAG,GAAI,GAAI,EAAG,GAAI,KAClB,EAAG,GAAI,GAAI,EAAG,GAAI,KAElB,EAAG,IAAK,MACR,EAAG,GAAI,GAAI,EAAG,GAAI,KAClB,EAAG,GAAI,GAAI,EAAG,GAAI,KAClB,GAAI,GAAI,GAAI,EAAG,GAAI,KAEnB,EAAG,IAAK,IAAK,EAAG,IAAK,MACrB,EAAG,GAAI,GAAI,EAAG,GAAI,KAClB,GAAI,GAAI,GAAI,EAAG,GAAI,KACnB,GAAI,GAAI,GAAI,EAAG,GAAI,KAEnB,EAAG,IAAK,GAAI,EAAG,IAAK,KACpB,EAAG,GAAI,GAAI,EAAG,GAAI,KAClB,EAAG,GAAI,GAAI,EAAG,GAAI,KAClB,GAAI,GAAI,GAAI,EAAG,GAAI,KAEnB,EAAG,IAAK,GAAI,EAAG,IAAK,KACpB,EAAG,GAAI,GAAI,EAAG,GAAI,KAClB,GAAI,GAAI,GAAI,EAAG,GAAI,KACnB,EAAG,GAAI,GAAI,GAAI,GAAI,KAEnB,EAAG,IAAK,IAAK,EAAG,IAAK,MACrB,GAAI,GAAI,GAAI,EAAG,GAAI,KACnB,EAAG,GAAI,GAAI,GAAI,GAAI,KACnB,EAAG,GAAI,GAAI,GAAI,GAAI,KAEnB,EAAG,IAAK,IAAK,EAAG,IAAK,MACrB,EAAG,GAAI,GAAI,EAAG,GAAI,KAClB,GAAI,GAAI,GAAI,EAAG,GAAI,KACnB,EAAG,GAAI,GAAI,GAAI,GAAI,KAEnB,EAAG,IAAK,IAAK,EAAG,IAAK,MACrB,EAAG,GAAI,GAAI,GAAI,GAAI,KACnB,GAAI,GAAI,GAAI,EAAG,GAAI,KACnB,EAAG,GAAI,GAAI,GAAI,GAAI,KAEnB,EAAG,IAAK,IAAK,EAAG,IAAK,MACrB,EAAG,GAAI,GAAI,GAAI,GAAI,KACnB,GAAI,GAAI,GAAI,EAAG,GAAI,KACnB,GAAI,GAAI,GAAI,GAAI,GAAI,KAEpB,EAAG,IAAK,IAAK,EAAG,IAAK,MACrB,GAAI,GAAI,KACR,GAAI,GAAI,GAAI,EAAG,GAAI,KACnB,GAAI,GAAI,GAAI,EAAG,GAAI,KAEnB,EAAG,IAAK,IAAK,EAAG,IAAK,MACrB,GAAI,GAAI,KACR,EAAG,GAAI,GAAI,GAAI,GAAI,KACnB,GAAI,GAAI,KAER,EAAG,IAAK,IAAK,EAAG,IAAK,MACrB,EAAG,GAAI,GAAI,GAAI,GAAI,KACnB,GAAI,GAAI,GAAI,GAAI,GAAI,KACpB,GAAI,GAAI,GAAI,GAAI,GAAI,KAEpB,EAAG,IAAK,IAAK,EAAG,IAAK,MACrB,EAAG,GAAI,GAAI,GAAI,GAAI,KACnB,GAAI,GAAI,GAAI,GAAI,GAAI,KACpB,GAAI,GAAI,GAAI,EAAG,GAAI,KAEnB,EAAG,IAAK,IAAK,EAAG,IAAK,MACrB,EAAG,GAAI,GAAI,GAAI,GAAI,KACnB,EAAG,GAAI,GAAI,GAAI,GAAI,KACnB,GAAI,GAAI,GAAI,GAAI,GAAI,KAEpB,GAAI,IAAK,IAAK,EAAG,IAAK,MACtB,GAAI,GAAI,GAAI,EAAG,GAAI,KACnB,GAAI,GAAI,GAAI,EAAG,GAAI,KACnB,GAAI,GAAI,GAAI,EAAG,GAAI,KAEnB,EAAG,IAAK,IAAK,EAAG,IAAK,MACrB,GAAI,GAAI,GAAI,EAAG,GAAI,KACnB,EAAG,GAAI,GAAI,GAAI,GAAI,KACnB,GAAI,GAAI,GAAI,GAAI,GAAI,KAEpB,EAAG,IAAK,IAAK,GAAI,IAAK,MACtB,EAAG,GAAI,GAAI,GAAI,GAAI,KACnB,EAAG,GAAI,GAAI,GAAI,GAAI,KACnB,GAAI,GAAI,GAAI,GAAI,GAAI,KAEpB,EAAG,IAAK,IAAK,EAAG,IAAK,MACrB,GAAI,GAAI,GAAI,EAAG,GAAI,KACnB,EAAG,GAAI,GAAI,GAAI,GAAI,KACnB,GAAI,GAAI,GAAI,GAAI,GAAI,KAEpB,EAAG,IAAK,IAAK,GAAI,IAAK,MACtB,GAAI,GAAI,GAAI,GAAI,GAAI,KACpB,GAAI,GAAI,GAAI,GAAI,GAAI,KACpB,GAAI,GAAI,GAAI,GAAI,GAAI,KAEpB,GAAI,IAAK,IAAK,EAAG,IAAK,MACtB,EAAG,GAAI,GAAI,GAAI,GAAI,KACnB,GAAI,GAAI,GAAI,EAAG,GAAI,KACnB,GAAI,GAAI,GAAI,GAAI,GAAI,KAEpB,GAAI,IAAK,MACT,GAAI,GAAI,GAAI,GAAI,GAAI,KACpB,GAAI,GAAI,GAAI,GAAI,GAAI,KACpB,GAAI,GAAI,GAAI,GAAI,GAAI,KAEpB,GAAI,IAAK,IAAK,EAAG,IAAK,MACtB,GAAI,GAAI,GAAI,GAAI,GAAI,KACpB,GAAI,GAAI,GAAI,GAAI,GAAI,KACpB,GAAI,GAAI,GAAI,GAAI,GAAI,KAEpB,GAAI,IAAK,IAAK,EAAG,IAAK,MACtB,GAAI,GAAI,GAAI,GAAI,GAAI,KACpB,GAAI,GAAI,GAAI,EAAG,GAAI,KACnB,GAAI,GAAI,GAAI,EAAG,GAAI,KAEnB,GAAI,IAAK,IAAK,EAAG,IAAK,MACtB,GAAI,GAAI,GAAI,GAAI,GAAI,KACpB,GAAI,GAAI,GAAI,GAAI,GAAI,KACpB,GAAI,GAAI,GAAI,GAAI,GAAI,KAEpB,EAAG,IAAK,IAAK,GAAI,IAAK,MACtB,EAAG,GAAI,GAAI,GAAI,GAAI,KACnB,GAAI,GAAI,GAAI,GAAI,GAAI,KACpB,EAAG,GAAI,GAAI,GAAI,GAAI,KAEnB,GAAI,IAAK,IAAK,EAAG,IAAK,MACtB,GAAI,GAAI,GAAI,GAAI,GAAI,KACpB,GAAI,GAAI,GAAI,GAAI,GAAI,KACpB,GAAI,GAAI,GAAI,GAAI,GAAI,KAEpB,EAAG,IAAK,IAAK,GAAI,IAAK,MACtB,GAAI,GAAI,GAAI,GAAI,GAAI,KACpB,GAAI,GAAI,GAAI,GAAI,GAAI,KACpB,GAAI,GAAI,GAAI,GAAI,GAAI,KAEpB,GAAI,IAAK,IAAK,EAAG,IAAK,MACtB,GAAI,GAAI,GAAI,EAAG,GAAI,KACnB,GAAI,GAAI,GAAI,GAAI,GAAI,KACpB,GAAI,GAAI,GAAI,GAAI,GAAI,KAEpB,GAAI,IAAK,IAAK,EAAG,IAAK,MACtB,GAAI,GAAI,GAAI,GAAI,GAAI,KACpB,GAAI,GAAI,GAAI,GAAI,GAAI,KACpB,GAAI,GAAI,GAAI,GAAI,GAAI,KAG3BzH,EAAU8D,YAAc,SAAUhF,EAAYC,GAE1C,GAAI2I,GAAU1H,EAAU2H,gBAAgB7I,EAAYC,EAEpD,IAAec,QAAX6H,EACA,KAAM,IAAItN,OAAM,6BAA+B0E,EAAa,sBAAwBC,EAOxF,KAAK,GAJDvF,GAASkO,EAAQlO,OAAS,EAE1BoO,EAAO,GAAI7H,OAEN9F,EAAI,EAAOT,EAAJS,EAAYA,IAMxB,IAAK,GAJDuC,GAAQkL,EAAY,EAAJzN,EAAQ,GACxBgG,EAAayH,EAAY,EAAJzN,EAAQ,GAC7BiG,EAAYwH,EAAY,EAAJzN,EAAQ,GAEvBC,EAAI,EAAOsC,EAAJtC,EAAWA,IACvB0N,EAAKjK,KAAK,GAAIqC,GAAUC,EAAYC,GAI5C,OAAO0H,IAGX5H,EAAU2H,gBAAkB,SAAU7I,EAAYC,GAE9C,OAAQA,GACJ,IAAKrF,GAAoBC,EACrB,MAAOqG,GAAUyH,eAAkC,GAAlB3I,EAAa,GAAS,EAF/D,KAGSpF,GAAoBE,EACrB,MAAOoG,GAAUyH,eAAkC,GAAlB3I,EAAa,GAAS,EAJ/D,KAKSpF,GAAoBG,EACrB,MAAOmG,GAAUyH,eAAkC,GAAlB3I,EAAa,GAAS,EAN/D,KAOSpF,GAAoBI,EACrB,MAAOkG,GAAUyH,eAAkC,GAAlB3I,EAAa,GAAS,EAR/D,SAUQ,SAaZqB,EAAYzH,WAERwM,IAAK,SAAUE,GACX,GAAIyC,GAAWxG,KAAK8B,MAAMiC,EAAQ,EAClC,OAA8D,KAArDhO,KAAMgJ,OAAOyH,KAAe,EAAIzC,EAAQ,EAAO,IAG5DrB,IAAK,SAAUpE,EAAKnG,GAChB,IAAK,GAAIS,GAAI,EAAOT,EAAJS,EAAYA,IACxB7C,KAAKgN,OAA6C,IAApCzE,IAAUnG,EAASS,EAAI,EAAO,KAIpDgK,gBAAiB,WACb,MAAO7M,MAAKoC,QAGhB4K,OAAQ,SAAU0D,GAEd,GAAID,GAAWxG,KAAK8B,MAAM/L,KAAKoC,OAAS,EACpCpC,MAAKgJ,OAAO5G,QAAUqO,GACtBzQ,KAAKgJ,OAAOzC,KAAK,GAGjBmK,IACA1Q,KAAKgJ,OAAOyH,IAAc,MAAUzQ,KAAKoC,OAAS,GAGtDpC,KAAKoC,WAIbzC,EAAQoD,kBACH,GAAG,GAAG,GAAG,IACR,GAAG,GAAG,GAAG,KACT,GAAG,GAAG,GAAG,KACT,GAAG,GAAG,GAAG,KACT,IAAI,GAAG,GAAG,KACV,IAAI,IAAI,GAAG,KACX,IAAI,IAAI,GAAG,KACX,IAAI,IAAI,IAAI,KACZ,IAAI,IAAI,IAAI,KACZ,IAAI,IAAI,IAAI,MACZ,IAAI,IAAI,IAAI,MACZ,IAAI,IAAI,IAAI,MACZ,IAAI,IAAI,IAAI,MACZ,IAAI,IAAI,IAAI,MACZ,IAAI,IAAI,IAAI,MACZ,IAAI,IAAI,IAAI,MACZ,IAAI,IAAI,IAAI,MACZ,IAAI,IAAI,IAAI,MACZ,IAAI,IAAI,IAAI,MACZ,IAAI,IAAI,IAAI,MACZ,IAAI,IAAI,IAAI,MACZ,KAAK,IAAI,IAAI,MACb,KAAK,IAAI,IAAI,MACb,KAAK,IAAI,IAAI,MACb,KAAK,IAAI,IAAI,MACb,KAAK,KAAK,IAAI,MACd,KAAK,KAAK,IAAI,MACd,KAAK,KAAK,IAAI,MACd,KAAK,KAAK,IAAI,MACd,KAAK,KAAK,IAAI,MACd,KAAK,KAAK,KAAK,MACf,KAAK,KAAK,KAAK,MACf,KAAK,KAAK,KAAK,MACf,KAAK,KAAK,KAAK,MACf,KAAK,KAAK,KAAK,MACf,KAAK,KAAK,KAAK,OACf,KAAK,KAAK,KAAK,OACf,KAAK,KAAK,KAAK,OACf,KAAK,KAAK,KAAK,OACf,KAAK,KAAK,KAAK,OAWrBpD,EAAQwC,UAAYA","file":"index.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactQRCode\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactQRCode\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactQRCode\"] = factory(require(\"react\"));\n\telse\n\t\troot[\"ReactQRCode\"] = factory(root[\"React\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar React = __webpack_require__(1);\n\t\n\tvar _require = __webpack_require__(2);\n\t\n\tvar QRCode = _require.QRCode;\n\tvar QRErrorCorrectLevel = _require.QRErrorCorrectLevel;\n\tvar QRCapacityTable = _require.QRCapacityTable;\n\tvar UTF8Array = _require.UTF8Array;\n\t\n\t\n\tvar SUPPORT_CANVAS = !!document.createElement('canvas').getContext;\n\tvar SUPPORT_SVG = !!(document.createElementNS && document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect);\n\t\n\tfunction getQRVersion(text, ecl) {\n\t    var c = UTF8Array(text).length,\n\t        eci = [QRErrorCorrectLevel.L, QRErrorCorrectLevel.M, QRErrorCorrectLevel.Q, QRErrorCorrectLevel.H],\n\t        capacity = 0,\n\t        version = void 0;\n\t\n\t    //figure out what version can hold the amount of text\n\t    for (var i = 0, j = QRCapacityTable.length; i < j; i++) {\n\t        capacity = QRCapacityTable[i][eci[ecl]];\n\t        if (c < QRCapacityTable[i][eci[ecl]]) {\n\t            version = i + 1;\n\t            break;\n\t        }\n\t    }\n\t\n\t    if (!version) {\n\t        version = QRCapacityTable.length - 1;\n\t    }\n\t\n\t    if (capacity < c) {\n\t        throw new Error(\"Content too long\");\n\t    }\n\t\n\t    return version;\n\t}\n\t\n\tvar ReactQRCode = function (_React$Component) {\n\t    _inherits(ReactQRCode, _React$Component);\n\t\n\t    function ReactQRCode() {\n\t        _classCallCheck(this, ReactQRCode);\n\t\n\t        return _possibleConstructorReturn(this, Object.getPrototypeOf(ReactQRCode).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(ReactQRCode, [{\n\t        key: 'render',\n\t        value: function render() {\n\t            var renderer = this.props.render || this.props.renderer;\n\t            if (!renderer || renderer === 'auto') {\n\t                renderer = SUPPORT_SVG ? 'svg' : SUPPORT_CANVAS ? 'canvas' : '';\n\t            }\n\t            if (renderer === 'canvas') {\n\t                return React.createElement(CanvasQRCode, this.props);\n\t            } else {\n\t                return React.createElement(SvgQRCode, this.props);\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return ReactQRCode;\n\t}(React.Component);\n\t\n\tvar SvgQRCode = function (_React$Component2) {\n\t    _inherits(SvgQRCode, _React$Component2);\n\t\n\t    function SvgQRCode() {\n\t        _classCallCheck(this, SvgQRCode);\n\t\n\t        return _possibleConstructorReturn(this, Object.getPrototypeOf(SvgQRCode).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(SvgQRCode, [{\n\t        key: 'componentWillMount',\n\t        value: function componentWillMount() {\n\t            this.qrcode = new QRCode(getQRVersion(this.props.content, QRErrorCorrectLevel.M), QRErrorCorrectLevel.M);\n\t            this.qrcode.addData(this.props.content);\n\t            this.qrcode.make();\n\t        }\n\t    }, {\n\t        key: 'componentWillReceiveProps',\n\t        value: function componentWillReceiveProps(nextProps) {\n\t            if (nextProps.content !== this.props.content) {\n\t                this.qrcode = new QRCode(getQRVersion(nextProps.content, QRErrorCorrectLevel.M), QRErrorCorrectLevel.M);\n\t                this.qrcode.addData(nextProps.content);\n\t                this.qrcode.make();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'render',\n\t        value: function render() {\n\t            var props = this.props;\n\t            var qrcode = this.qrcode;\n\t            var count = qrcode.getModuleCount();\n\t            var scale = +props.scale || 4;\n\t            var margin = +props.margin || 20;\n\t            var size = count * scale + margin * 2;\n\t\n\t            var rects = [React.createElement('rect', { key: 'background', x: '0', y: '0', width: size, height: size, style: { \"fill\": props.background, shapeRendering: \"crispEdges\" } })];\n\t\n\t            var currenty = margin,\n\t                currentx = void 0;\n\t            for (var row = 0; row < count; row++) {\n\t                currentx = margin;\n\t                for (var col = 0; col < count; col++) {\n\t                    if (qrcode.isDark(row, col)) {\n\t                        rects.push(React.createElement('rect', { key: row + '-' + col, x: currentx, y: currenty, width: scale, height: scale, style: { \"fill\": props.foreground, shapeRendering: \"crispEdges\" } }));\n\t                    }\n\t                    currentx += scale;\n\t                }\n\t                currenty += scale;\n\t            }\n\t\n\t            return React.createElement(\n\t                'svg',\n\t                { xmlns: 'http://www.w3.org/2000/svg', version: '1.1', width: size, height: size },\n\t                rects\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return SvgQRCode;\n\t}(React.Component);\n\t\n\tvar CanvasQRCode = function (_React$Component3) {\n\t    _inherits(CanvasQRCode, _React$Component3);\n\t\n\t    function CanvasQRCode() {\n\t        _classCallCheck(this, CanvasQRCode);\n\t\n\t        return _possibleConstructorReturn(this, Object.getPrototypeOf(CanvasQRCode).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(CanvasQRCode, [{\n\t        key: 'componentWillMount',\n\t        value: function componentWillMount() {\n\t            this.qrcode = new QRCode(getQRVersion(this.props.content, QRErrorCorrectLevel.M), QRErrorCorrectLevel.M);\n\t            this.qrcode.addData(this.props.content);\n\t            this.qrcode.make();\n\t        }\n\t    }, {\n\t        key: 'componentWillReceiveProps',\n\t        value: function componentWillReceiveProps(nextProps) {\n\t            if (nextProps.content !== this.props.content) {\n\t                this.qrcode = new QRCode(getQRVersion(nextProps.content, QRErrorCorrectLevel.M), QRErrorCorrectLevel.M);\n\t                this.qrcode.addData(nextProps.content);\n\t                this.qrcode.make();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'componentDidMount',\n\t        value: function componentDidMount() {\n\t            this.draw();\n\t        }\n\t    }, {\n\t        key: 'componentDidUpdate',\n\t        value: function componentDidUpdate() {\n\t            this.draw();\n\t        }\n\t    }, {\n\t        key: 'draw',\n\t        value: function draw() {\n\t            var props = this.props;\n\t            var qrcode = this.qrcode;\n\t            var canvas = ReactDOM.findDOMNode(this);\n\t            var ctx = canvas.getContext('2d');\n\t            var count = qrcode.getModuleCount();\n\t            var scale = +props.scale || 4;\n\t            var margin = +props.margin || 20;\n\t            var size = count * scale + margin * 2;\n\t\n\t            ctx.clearRect(0, 0, canvas.width, canvas.height);\n\t            canvas.style.height = canvas.height = size;\n\t            canvas.style.width = canvas.width = size;\n\t            ctx.fillStyle = props.background;\n\t            ctx.fillRect(0, 0, size, size);\n\t\n\t            ctx.fillStyle = props.foreground;\n\t            var currenty = margin,\n\t                currentx = void 0;\n\t            // draw in the canvas\n\t            for (var row = 0; row < count; row++) {\n\t                currentx = margin;\n\t                for (var col = 0; col < count; col++) {\n\t                    if (qrcode.isDark(row, col)) {\n\t                        ctx.fillRect(currentx, currenty, scale, scale);\n\t                    }\n\t                    currentx += scale;\n\t                }\n\t                currenty += scale;\n\t            }\n\t        }\n\t    }, {\n\t        key: 'render',\n\t        value: function render() {\n\t            return React.createElement('canvas', null);\n\t        }\n\t    }]);\n\t\n\t    return CanvasQRCode;\n\t}(React.Component);\n\t\n\tReactQRCode.defaultProps = {\n\t    renderer: \"canvas\",\n\t    content: \"\",\n\t    scale: 4,\n\t    margin: 20,\n\t    background: \"white\",\n\t    foreground: \"black\"\n\t};\n\t\n\tReactQRCode.propTypes = {\n\t    renderer: React.PropTypes.oneOf(['canvas', 'svg', 'auto']),\n\t    content: React.PropTypes.string,\n\t    scale: React.PropTypes.oneOfType([React.PropTypes.number, React.PropTypes.string]),\n\t    margin: React.PropTypes.oneOfType([React.PropTypes.number, React.PropTypes.string]),\n\t    background: React.PropTypes.string,\n\t    foreground: React.PropTypes.string\n\t};\n\t\n\tmodule.exports = ReactQRCode;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t/**\n\t * QRCode for JavaScript\n\t *\n\t * modified by Ryan Day for nodejs support\n\t * Copyright (c) 2011 Ryan Day\n\t *\n\t * Licensed under the MIT license:\n\t *   http://www.opensource.org/licenses/mit-license.php\n\t *\n\t * EXPORTS:\n\t *    {\n\t *\tQRCode:QRCode\n\t *\tQRErrorCorrectLevel:QRErrorCorrectLevel\n\t *\t}\n\t //---------------------------------------------------------------------\n\t // QRCode for JavaScript\n\t //\n\t // Copyright (c) 2009 Kazuhiko Arase\n\t //\n\t // URL: http://www.d-project.com/\n\t //\n\t // Licensed under the MIT license:\n\t //   http://www.opensource.org/licenses/mit-license.php\n\t //\n\t // The word \"QR Code\" is registered trademark of\n\t // DENSO WAVE INCORPORATED\n\t //   http://www.denso-wave.com/qrcode/faqpatent-e.html\n\t //\n\t //---------------------------------------------------------------------\n\t */\n\t\n\t//---------------------------------------------------------------------\n\t// QRCode\n\t//---------------------------------------------------------------------\n\t\n\texports.QRCode = QRCode;\n\t\n\tvar QRDataArray = typeof Uint32Array == 'undefined' ? Uint32Array : Array;\n\t\n\tfunction QRCode(typeNumber, errorCorrectLevel) {\n\t    this.typeNumber = typeNumber;\n\t    this.errorCorrectLevel = errorCorrectLevel;\n\t    this.modules = null;\n\t    this.moduleCount = 0;\n\t    this.dataCache = null;\n\t    this.dataList = new QRDataArray();\n\t}\n\t\n\tQRCode.prototype = {\n\t\n\t    addData: function addData(data) {\n\t        var newData = new QR8bitByte(data);\n\t\n\t        this.dataList.push(newData);\n\t        this.dataCache = null;\n\t    },\n\t\n\t    isDark: function isDark(row, col) {\n\t        if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n\t            throw new Error(row + \",\" + col);\n\t        }\n\t        return this.modules[row][col];\n\t    },\n\t\n\t    getModuleCount: function getModuleCount() {\n\t        return this.moduleCount;\n\t    },\n\t\n\t    make: function make() {\n\t        this.makeImpl(false, this.getBestMaskPattern());\n\t    },\n\t\n\t    makeImpl: function makeImpl(test, maskPattern) {\n\t\n\t        this.moduleCount = this.typeNumber * 4 + 17;\n\t        this.modules = new QRDataArray(this.moduleCount);\n\t\n\t        for (var row = 0; row < this.moduleCount; row++) {\n\t\n\t            this.modules[row] = new QRDataArray(this.moduleCount);\n\t\n\t            for (var col = 0; col < this.moduleCount; col++) {\n\t                this.modules[row][col] = null; //(col + row) % 3;\n\t            }\n\t        }\n\t\n\t        this.setupPositionProbePattern(0, 0);\n\t        this.setupPositionProbePattern(this.moduleCount - 7, 0);\n\t        this.setupPositionProbePattern(0, this.moduleCount - 7);\n\t        this.setupPositionAdjustPattern();\n\t        this.setupTimingPattern();\n\t        this.setupTypeInfo(test, maskPattern);\n\t\n\t        if (this.typeNumber >= 7) {\n\t            this.setupTypeNumber(test);\n\t        }\n\t\n\t        if (this.dataCache == null) {\n\t            this.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n\t        }\n\t\n\t        this.mapData(this.dataCache, maskPattern);\n\t    },\n\t\n\t    setupPositionProbePattern: function setupPositionProbePattern(row, col) {\n\t\n\t        for (var r = -1; r <= 7; r++) {\n\t\n\t            if (row + r <= -1 || this.moduleCount <= row + r) continue;\n\t\n\t            for (var c = -1; c <= 7; c++) {\n\t\n\t                if (col + c <= -1 || this.moduleCount <= col + c) continue;\n\t\n\t                if (0 <= r && r <= 6 && (c == 0 || c == 6) || 0 <= c && c <= 6 && (r == 0 || r == 6) || 2 <= r && r <= 4 && 2 <= c && c <= 4) {\n\t                    this.modules[row + r][col + c] = true;\n\t                } else {\n\t                    this.modules[row + r][col + c] = false;\n\t                }\n\t            }\n\t        }\n\t    },\n\t\n\t    getBestMaskPattern: function getBestMaskPattern() {\n\t\n\t        var minLostPoint = 0;\n\t        var pattern = 0;\n\t\n\t        for (var i = 0; i < 8; i++) {\n\t\n\t            this.makeImpl(true, i);\n\t\n\t            var lostPoint = QRUtil.getLostPoint(this);\n\t\n\t            if (i == 0 || minLostPoint > lostPoint) {\n\t                minLostPoint = lostPoint;\n\t                pattern = i;\n\t            }\n\t        }\n\t\n\t        return pattern;\n\t    },\n\t\n\t    setupTimingPattern: function setupTimingPattern() {\n\t\n\t        for (var r = 8; r < this.moduleCount - 8; r++) {\n\t            if (this.modules[r][6] != null) {\n\t                continue;\n\t            }\n\t            this.modules[r][6] = r % 2 == 0;\n\t        }\n\t\n\t        for (var c = 8; c < this.moduleCount - 8; c++) {\n\t            if (this.modules[6][c] != null) {\n\t                continue;\n\t            }\n\t            this.modules[6][c] = c % 2 == 0;\n\t        }\n\t    },\n\t\n\t    setupPositionAdjustPattern: function setupPositionAdjustPattern() {\n\t\n\t        var pos = QRUtil.getPatternPosition(this.typeNumber);\n\t        pos = pos || '';\n\t        for (var i = 0; i < pos.length; i++) {\n\t\n\t            for (var j = 0; j < pos.length; j++) {\n\t\n\t                var row = pos[i];\n\t                var col = pos[j];\n\t\n\t                if (this.modules[row][col] != null) {\n\t                    continue;\n\t                }\n\t\n\t                for (var r = -2; r <= 2; r++) {\n\t\n\t                    for (var c = -2; c <= 2; c++) {\n\t\n\t                        if (r == -2 || r == 2 || c == -2 || c == 2 || r == 0 && c == 0) {\n\t                            this.modules[row + r][col + c] = true;\n\t                        } else {\n\t                            this.modules[row + r][col + c] = false;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t        }\n\t    },\n\t\n\t    setupTypeNumber: function setupTypeNumber(test) {\n\t\n\t        var bits = QRUtil.getBCHTypeNumber(this.typeNumber);\n\t\n\t        for (var i = 0; i < 18; i++) {\n\t            var mod = !test && (bits >> i & 1) == 1;\n\t            this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\n\t        }\n\t\n\t        for (var i = 0; i < 18; i++) {\n\t            var mod = !test && (bits >> i & 1) == 1;\n\t            this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n\t        }\n\t    },\n\t\n\t    setupTypeInfo: function setupTypeInfo(test, maskPattern) {\n\t\n\t        var data = this.errorCorrectLevel << 3 | maskPattern;\n\t        var bits = QRUtil.getBCHTypeInfo(data);\n\t\n\t        // vertical\n\t        for (var i = 0; i < 15; i++) {\n\t\n\t            var mod = !test && (bits >> i & 1) == 1;\n\t\n\t            if (i < 6) {\n\t                this.modules[i][8] = mod;\n\t            } else if (i < 8) {\n\t                this.modules[i + 1][8] = mod;\n\t            } else {\n\t                this.modules[this.moduleCount - 15 + i][8] = mod;\n\t            }\n\t        }\n\t\n\t        // horizontal\n\t        for (var i = 0; i < 15; i++) {\n\t\n\t            var mod = !test && (bits >> i & 1) == 1;\n\t\n\t            if (i < 8) {\n\t                this.modules[8][this.moduleCount - i - 1] = mod;\n\t            } else if (i < 9) {\n\t                this.modules[8][15 - i - 1 + 1] = mod;\n\t            } else {\n\t                this.modules[8][15 - i - 1] = mod;\n\t            }\n\t        }\n\t\n\t        // fixed module\n\t        this.modules[this.moduleCount - 8][8] = !test;\n\t    },\n\t\n\t    mapData: function mapData(data, maskPattern) {\n\t\n\t        var inc = -1;\n\t        var row = this.moduleCount - 1;\n\t        var bitIndex = 7;\n\t        var byteIndex = 0;\n\t\n\t        for (var col = this.moduleCount - 1; col > 0; col -= 2) {\n\t\n\t            if (col == 6) col--;\n\t\n\t            while (true) {\n\t\n\t                for (var c = 0; c < 2; c++) {\n\t\n\t                    if (this.modules[row][col - c] == null) {\n\t\n\t                        var dark = false;\n\t\n\t                        if (byteIndex < data.length) {\n\t                            dark = (data[byteIndex] >>> bitIndex & 1) == 1;\n\t                        }\n\t\n\t                        var mask = QRUtil.getMask(maskPattern, row, col - c);\n\t\n\t                        if (mask) {\n\t                            dark = !dark;\n\t                        }\n\t\n\t                        this.modules[row][col - c] = dark;\n\t                        bitIndex--;\n\t\n\t                        if (bitIndex == -1) {\n\t                            byteIndex++;\n\t                            bitIndex = 7;\n\t                        }\n\t                    }\n\t                }\n\t\n\t                row += inc;\n\t\n\t                if (row < 0 || this.moduleCount <= row) {\n\t                    row -= inc;\n\t                    inc = -inc;\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t};\n\t\n\tQRCode.PAD0 = 0xEC;\n\tQRCode.PAD1 = 0x11;\n\t\n\tQRCode.createData = function (typeNumber, errorCorrectLevel, dataList) {\n\t\n\t    var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n\t\n\t    var buffer = new QRBitBuffer();\n\t\n\t    for (var i = 0; i < dataList.length; i++) {\n\t        var data = dataList[i];\n\t        buffer.put(data.mode, 4);\n\t        buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\n\t        data.write(buffer);\n\t    }\n\t\n\t    // calc num max data.\n\t    var totalDataCount = 0;\n\t    for (var i = 0; i < rsBlocks.length; i++) {\n\t        totalDataCount += rsBlocks[i].dataCount;\n\t    }\n\t\n\t    if (buffer.getLengthInBits() > totalDataCount * 8) {\n\t        throw new Error(\"code length overflow. (\" + buffer.getLengthInBits() + \">\" + totalDataCount * 8 + \")\");\n\t    }\n\t\n\t    // end code\n\t    if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n\t        buffer.put(0, 4);\n\t    }\n\t\n\t    // padding\n\t    while (buffer.getLengthInBits() % 8 != 0) {\n\t        buffer.putBit(false);\n\t    }\n\t\n\t    // padding\n\t    while (true) {\n\t\n\t        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n\t            break;\n\t        }\n\t        buffer.put(QRCode.PAD0, 8);\n\t\n\t        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n\t            break;\n\t        }\n\t        buffer.put(QRCode.PAD1, 8);\n\t    }\n\t\n\t    return QRCode.createBytes(buffer, rsBlocks);\n\t};\n\t\n\tQRCode.createBytes = function (buffer, rsBlocks) {\n\t\n\t    var offset = 0;\n\t\n\t    var maxDcCount = 0;\n\t    var maxEcCount = 0;\n\t\n\t    var dcdata = new QRDataArray(rsBlocks.length);\n\t    var ecdata = new QRDataArray(rsBlocks.length);\n\t\n\t    for (var r = 0; r < rsBlocks.length; r++) {\n\t\n\t        var dcCount = rsBlocks[r].dataCount;\n\t        var ecCount = rsBlocks[r].totalCount - dcCount;\n\t\n\t        maxDcCount = Math.max(maxDcCount, dcCount);\n\t        maxEcCount = Math.max(maxEcCount, ecCount);\n\t\n\t        dcdata[r] = new QRDataArray(dcCount);\n\t\n\t        for (var i = 0; i < dcdata[r].length; i++) {\n\t            dcdata[r][i] = 0xff & buffer.buffer[i + offset];\n\t        }\n\t        offset += dcCount;\n\t\n\t        var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n\t        var rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\n\t\n\t        var modPoly = rawPoly.mod(rsPoly);\n\t        ecdata[r] = new QRDataArray(rsPoly.getLength() - 1);\n\t        for (var i = 0; i < ecdata[r].length; i++) {\n\t            var modIndex = i + modPoly.getLength() - ecdata[r].length;\n\t            ecdata[r][i] = modIndex >= 0 ? modPoly.get(modIndex) : 0;\n\t        }\n\t    }\n\t\n\t    var totalCodeCount = 0;\n\t    for (var i = 0; i < rsBlocks.length; i++) {\n\t        totalCodeCount += rsBlocks[i].totalCount;\n\t    }\n\t\n\t    var data = new QRDataArray(totalCodeCount);\n\t    var index = 0;\n\t\n\t    for (var i = 0; i < maxDcCount; i++) {\n\t        for (var r = 0; r < rsBlocks.length; r++) {\n\t            if (i < dcdata[r].length) {\n\t                data[index++] = dcdata[r][i];\n\t            }\n\t        }\n\t    }\n\t\n\t    for (var i = 0; i < maxEcCount; i++) {\n\t        for (var r = 0; r < rsBlocks.length; r++) {\n\t            if (i < ecdata[r].length) {\n\t                data[index++] = ecdata[r][i];\n\t            }\n\t        }\n\t    }\n\t\n\t    return data;\n\t};\n\t\n\t//---------------------------------------------------------------------\n\t// QR8bitByte\n\t//---------------------------------------------------------------------\n\tfunction QR8bitByte(data) {\n\t    this.mode = QRMode.MODE_8BIT_BYTE;\n\t    this.data = data;\n\t    this.parsedData = UTF8Array(data);\n\t}\n\t\n\tQR8bitByte.prototype = {\n\t    getLength: function getLength(buffer) {\n\t        return this.parsedData.length;\n\t    },\n\t    write: function write(buffer) {\n\t        for (var i = 0, l = this.parsedData.length; i < l; i++) {\n\t            buffer.put(this.parsedData[i], 8);\n\t        }\n\t    }\n\t};\n\t\n\t//---------------------------------------------------------------------\n\t// QRMode\n\t//---------------------------------------------------------------------\n\t\n\tvar QRMode = {\n\t    MODE_NUMBER: 1 << 0,\n\t    MODE_ALPHA_NUM: 1 << 1,\n\t    MODE_8BIT_BYTE: 1 << 2,\n\t    MODE_KANJI: 1 << 3\n\t};\n\t\n\t//---------------------------------------------------------------------\n\t// QRErrorCorrectLevel\n\t//---------------------------------------------------------------------\n\t//exported\n\t\n\tvar QRErrorCorrectLevel = exports.QRErrorCorrectLevel = {\n\t    L: 1,\n\t    M: 0,\n\t    Q: 3,\n\t    H: 2\n\t};\n\t\n\t//---------------------------------------------------------------------\n\t// QRMaskPattern\n\t//---------------------------------------------------------------------\n\t\n\tvar QRMaskPattern = {\n\t    PATTERN000: 0,\n\t    PATTERN001: 1,\n\t    PATTERN010: 2,\n\t    PATTERN011: 3,\n\t    PATTERN100: 4,\n\t    PATTERN101: 5,\n\t    PATTERN110: 6,\n\t    PATTERN111: 7\n\t};\n\t\n\t//---------------------------------------------------------------------\n\t// QRUtil\n\t//---------------------------------------------------------------------\n\t\n\tvar QRUtil = {\n\t\n\t    PATTERN_POSITION_TABLE: [[], [6, 18], [6, 22], [6, 26], [6, 30], [6, 34], [6, 22, 38], [6, 24, 42], [6, 26, 46], [6, 28, 50], [6, 30, 54], [6, 32, 58], [6, 34, 62], [6, 26, 46, 66], [6, 26, 48, 70], [6, 26, 50, 74], [6, 30, 54, 78], [6, 30, 56, 82], [6, 30, 58, 86], [6, 34, 62, 90], [6, 28, 50, 72, 94], [6, 26, 50, 74, 98], [6, 30, 54, 78, 102], [6, 28, 54, 80, 106], [6, 32, 58, 84, 110], [6, 30, 58, 86, 114], [6, 34, 62, 90, 118], [6, 26, 50, 74, 98, 122], [6, 30, 54, 78, 102, 126], [6, 26, 52, 78, 104, 130], [6, 30, 56, 82, 108, 134], [6, 34, 60, 86, 112, 138], [6, 30, 58, 86, 114, 142], [6, 34, 62, 90, 118, 146], [6, 30, 54, 78, 102, 126, 150], [6, 24, 50, 76, 102, 128, 154], [6, 28, 54, 80, 106, 132, 158], [6, 32, 58, 84, 110, 136, 162], [6, 26, 54, 82, 110, 138, 166], [6, 30, 58, 86, 114, 142, 170]],\n\t\n\t    G15: 1 << 10 | 1 << 8 | 1 << 5 | 1 << 4 | 1 << 2 | 1 << 1 | 1 << 0,\n\t    G18: 1 << 12 | 1 << 11 | 1 << 10 | 1 << 9 | 1 << 8 | 1 << 5 | 1 << 2 | 1 << 0,\n\t    G15_MASK: 1 << 14 | 1 << 12 | 1 << 10 | 1 << 4 | 1 << 1,\n\t\n\t    getBCHTypeInfo: function getBCHTypeInfo(data) {\n\t        var d = data << 10;\n\t        while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n\t            d ^= QRUtil.G15 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15);\n\t        }\n\t        return (data << 10 | d) ^ QRUtil.G15_MASK;\n\t    },\n\t\n\t    getBCHTypeNumber: function getBCHTypeNumber(data) {\n\t        var d = data << 12;\n\t        while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n\t            d ^= QRUtil.G18 << QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18);\n\t        }\n\t        return data << 12 | d;\n\t    },\n\t\n\t    getBCHDigit: function getBCHDigit(data) {\n\t\n\t        var digit = 0;\n\t\n\t        while (data != 0) {\n\t            digit++;\n\t            data >>>= 1;\n\t        }\n\t\n\t        return digit;\n\t    },\n\t\n\t    getPatternPosition: function getPatternPosition(typeNumber) {\n\t        return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n\t    },\n\t\n\t    getMask: function getMask(maskPattern, i, j) {\n\t\n\t        switch (maskPattern) {\n\t\n\t            case QRMaskPattern.PATTERN000:\n\t                return (i + j) % 2 == 0;\n\t            case QRMaskPattern.PATTERN001:\n\t                return i % 2 == 0;\n\t            case QRMaskPattern.PATTERN010:\n\t                return j % 3 == 0;\n\t            case QRMaskPattern.PATTERN011:\n\t                return (i + j) % 3 == 0;\n\t            case QRMaskPattern.PATTERN100:\n\t                return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 == 0;\n\t            case QRMaskPattern.PATTERN101:\n\t                return i * j % 2 + i * j % 3 == 0;\n\t            case QRMaskPattern.PATTERN110:\n\t                return (i * j % 2 + i * j % 3) % 2 == 0;\n\t            case QRMaskPattern.PATTERN111:\n\t                return (i * j % 3 + (i + j) % 2) % 2 == 0;\n\t\n\t            default:\n\t                throw new Error(\"bad maskPattern:\" + maskPattern);\n\t        }\n\t    },\n\t\n\t    getErrorCorrectPolynomial: function getErrorCorrectPolynomial(errorCorrectLength) {\n\t\n\t        var a = new QRPolynomial([1], 0);\n\t\n\t        for (var i = 0; i < errorCorrectLength; i++) {\n\t            a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));\n\t        }\n\t\n\t        return a;\n\t    },\n\t\n\t    getLengthInBits: function getLengthInBits(mode, type) {\n\t\n\t        if (1 <= type && type < 10) {\n\t\n\t            // 1 - 9\n\t\n\t            switch (mode) {\n\t                case QRMode.MODE_NUMBER:\n\t                    return 10;\n\t                case QRMode.MODE_ALPHA_NUM:\n\t                    return 9;\n\t                case QRMode.MODE_8BIT_BYTE:\n\t                    return 8;\n\t                case QRMode.MODE_KANJI:\n\t                    return 8;\n\t                default:\n\t                    throw new Error(\"mode:\" + mode);\n\t            }\n\t        } else if (type < 27) {\n\t\n\t            // 10 - 26\n\t\n\t            switch (mode) {\n\t                case QRMode.MODE_NUMBER:\n\t                    return 12;\n\t                case QRMode.MODE_ALPHA_NUM:\n\t                    return 11;\n\t                case QRMode.MODE_8BIT_BYTE:\n\t                    return 16;\n\t                case QRMode.MODE_KANJI:\n\t                    return 10;\n\t                default:\n\t                    throw new Error(\"mode:\" + mode);\n\t            }\n\t        } else if (type < 41) {\n\t\n\t            // 27 - 40\n\t\n\t            switch (mode) {\n\t                case QRMode.MODE_NUMBER:\n\t                    return 14;\n\t                case QRMode.MODE_ALPHA_NUM:\n\t                    return 13;\n\t                case QRMode.MODE_8BIT_BYTE:\n\t                    return 16;\n\t                case QRMode.MODE_KANJI:\n\t                    return 12;\n\t                default:\n\t                    throw new Error(\"mode:\" + mode);\n\t            }\n\t        } else {\n\t            throw new Error(\"type:\" + type);\n\t        }\n\t    },\n\t\n\t    getLostPoint: function getLostPoint(qrCode) {\n\t\n\t        var moduleCount = qrCode.getModuleCount();\n\t\n\t        var lostPoint = 0;\n\t\n\t        // LEVEL1\n\t\n\t        for (var row = 0; row < moduleCount; row++) {\n\t\n\t            for (var col = 0; col < moduleCount; col++) {\n\t\n\t                var sameCount = 0;\n\t                var dark = qrCode.isDark(row, col);\n\t\n\t                for (var r = -1; r <= 1; r++) {\n\t\n\t                    if (row + r < 0 || moduleCount <= row + r) {\n\t                        continue;\n\t                    }\n\t\n\t                    for (var c = -1; c <= 1; c++) {\n\t\n\t                        if (col + c < 0 || moduleCount <= col + c) {\n\t                            continue;\n\t                        }\n\t\n\t                        if (r == 0 && c == 0) {\n\t                            continue;\n\t                        }\n\t\n\t                        if (dark == qrCode.isDark(row + r, col + c)) {\n\t                            sameCount++;\n\t                        }\n\t                    }\n\t                }\n\t\n\t                if (sameCount > 5) {\n\t                    lostPoint += 3 + sameCount - 5;\n\t                }\n\t            }\n\t        }\n\t\n\t        // LEVEL2\n\t\n\t        for (var row = 0; row < moduleCount - 1; row++) {\n\t            for (var col = 0; col < moduleCount - 1; col++) {\n\t                var count = 0;\n\t                if (qrCode.isDark(row, col)) count++;\n\t                if (qrCode.isDark(row + 1, col)) count++;\n\t                if (qrCode.isDark(row, col + 1)) count++;\n\t                if (qrCode.isDark(row + 1, col + 1)) count++;\n\t                if (count == 0 || count == 4) {\n\t                    lostPoint += 3;\n\t                }\n\t            }\n\t        }\n\t\n\t        // LEVEL3\n\t\n\t        for (var row = 0; row < moduleCount; row++) {\n\t            for (var col = 0; col < moduleCount - 6; col++) {\n\t                if (qrCode.isDark(row, col) && !qrCode.isDark(row, col + 1) && qrCode.isDark(row, col + 2) && qrCode.isDark(row, col + 3) && qrCode.isDark(row, col + 4) && !qrCode.isDark(row, col + 5) && qrCode.isDark(row, col + 6)) {\n\t                    lostPoint += 40;\n\t                }\n\t            }\n\t        }\n\t\n\t        for (var col = 0; col < moduleCount; col++) {\n\t            for (var row = 0; row < moduleCount - 6; row++) {\n\t                if (qrCode.isDark(row, col) && !qrCode.isDark(row + 1, col) && qrCode.isDark(row + 2, col) && qrCode.isDark(row + 3, col) && qrCode.isDark(row + 4, col) && !qrCode.isDark(row + 5, col) && qrCode.isDark(row + 6, col)) {\n\t                    lostPoint += 40;\n\t                }\n\t            }\n\t        }\n\t\n\t        // LEVEL4\n\t\n\t        var darkCount = 0;\n\t\n\t        for (var col = 0; col < moduleCount; col++) {\n\t            for (var row = 0; row < moduleCount; row++) {\n\t                if (qrCode.isDark(row, col)) {\n\t                    darkCount++;\n\t                }\n\t            }\n\t        }\n\t\n\t        var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n\t        lostPoint += ratio * 10;\n\t\n\t        return lostPoint;\n\t    }\n\t\n\t};\n\t\n\t//---------------------------------------------------------------------\n\t// QRMath\n\t//---------------------------------------------------------------------\n\t\n\tvar QRMath = {\n\t\n\t    glog: function glog(n) {\n\t\n\t        if (n < 1) {\n\t            throw new Error(\"glog(\" + n + \")\");\n\t        }\n\t\n\t        return QRMath.LOG_TABLE[n];\n\t    },\n\t\n\t    gexp: function gexp(n) {\n\t\n\t        while (n < 0) {\n\t            n += 255;\n\t        }\n\t\n\t        while (n >= 256) {\n\t            n -= 255;\n\t        }\n\t\n\t        return QRMath.EXP_TABLE[n];\n\t    },\n\t\n\t    EXP_TABLE: new Array(256),\n\t\n\t    LOG_TABLE: new Array(256)\n\t\n\t};\n\t\n\tfor (var i = 0; i < 8; i++) {\n\t    QRMath.EXP_TABLE[i] = 1 << i;\n\t}\n\tfor (var i = 8; i < 256; i++) {\n\t    QRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4] ^ QRMath.EXP_TABLE[i - 5] ^ QRMath.EXP_TABLE[i - 6] ^ QRMath.EXP_TABLE[i - 8];\n\t}\n\tfor (var i = 0; i < 255; i++) {\n\t    QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;\n\t}\n\t\n\t//---------------------------------------------------------------------\n\t// QRPolynomial\n\t//---------------------------------------------------------------------\n\t\n\tfunction QRPolynomial(num, shift) {\n\t\n\t    if (num.length == undefined) {\n\t        throw new Error(num.length + \"/\" + shift);\n\t    }\n\t\n\t    var offset = 0;\n\t\n\t    while (offset < num.length && num[offset] == 0) {\n\t        offset++;\n\t    }\n\t\n\t    this.num = new Array(num.length - offset + shift);\n\t    for (var i = 0; i < num.length - offset; i++) {\n\t        this.num[i] = num[i + offset];\n\t    }\n\t}\n\t\n\tQRPolynomial.prototype = {\n\t\n\t    get: function get(index) {\n\t        return this.num[index];\n\t    },\n\t\n\t    getLength: function getLength() {\n\t        return this.num.length;\n\t    },\n\t\n\t    multiply: function multiply(e) {\n\t\n\t        var num = new Array(this.getLength() + e.getLength() - 1);\n\t\n\t        for (var i = 0; i < this.getLength(); i++) {\n\t            for (var j = 0; j < e.getLength(); j++) {\n\t                num[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));\n\t            }\n\t        }\n\t\n\t        return new QRPolynomial(num, 0);\n\t    },\n\t\n\t    mod: function mod(e) {\n\t\n\t        if (this.getLength() - e.getLength() < 0) {\n\t            return this;\n\t        }\n\t\n\t        var ratio = QRMath.glog(this.get(0)) - QRMath.glog(e.get(0));\n\t\n\t        var num = new Array(this.getLength());\n\t\n\t        for (var i = 0; i < this.getLength(); i++) {\n\t            num[i] = this.get(i);\n\t        }\n\t\n\t        for (var i = 0; i < e.getLength(); i++) {\n\t            num[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);\n\t        }\n\t\n\t        // recursive call\n\t        return new QRPolynomial(num, 0).mod(e);\n\t    }\n\t};\n\t\n\t//---------------------------------------------------------------------\n\t// QRRSBlock\n\t//---------------------------------------------------------------------\n\t\n\tfunction QRRSBlock(totalCount, dataCount) {\n\t    this.totalCount = totalCount;\n\t    this.dataCount = dataCount;\n\t}\n\t\n\tQRRSBlock.RS_BLOCK_TABLE = [\n\t// L\n\t// M\n\t// Q\n\t// H\n\t\n\t// 1\n\t[1, 26, 19], [1, 26, 16], [1, 26, 13], [1, 26, 9],\n\t// 2\n\t[1, 44, 34], [1, 44, 28], [1, 44, 22], [1, 44, 16],\n\t// 3\n\t[1, 70, 55], [1, 70, 44], [2, 35, 17], [2, 35, 13],\n\t// 4\n\t[1, 100, 80], [2, 50, 32], [2, 50, 24], [4, 25, 9],\n\t// 5\n\t[1, 134, 108], [2, 67, 43], [2, 33, 15, 2, 34, 16], [2, 33, 11, 2, 34, 12],\n\t// 6\n\t[2, 86, 68], [4, 43, 27], [4, 43, 19], [4, 43, 15],\n\t// 7\n\t[2, 98, 78], [4, 49, 31], [2, 32, 14, 4, 33, 15], [4, 39, 13, 1, 40, 14],\n\t// 8\n\t[2, 121, 97], [2, 60, 38, 2, 61, 39], [4, 40, 18, 2, 41, 19], [4, 40, 14, 2, 41, 15],\n\t// 9\n\t[2, 146, 116], [3, 58, 36, 2, 59, 37], [4, 36, 16, 4, 37, 17], [4, 36, 12, 4, 37, 13],\n\t// 10\n\t[2, 86, 68, 2, 87, 69], [4, 69, 43, 1, 70, 44], [6, 43, 19, 2, 44, 20], [6, 43, 15, 2, 44, 16]\n\t//NOTE added by Ryan Day.to make greater than version 10 qrcodes\n\t// this table starts on page 40 of the spec PDF. google ISO/IEC 18004\n\t// 11\n\t, [4, 101, 81], [1, 80, 50, 4, 81, 51], [4, 50, 22, 4, 51, 23], [3, 36, 12, 8, 37, 13]\n\t//12\n\t, [2, 116, 92, 2, 117, 93], [6, 58, 36, 2, 59, 37], [4, 46, 20, 6, 47, 21], [7, 42, 14, 4, 43, 15]\n\t//13\n\t, [4, 133, 107], [8, 59, 37, 1, 60, 38], [8, 44, 20, 4, 45, 21], [12, 33, 11, 4, 34, 12]\n\t//14\n\t, [3, 145, 115, 1, 146, 116], [4, 64, 40, 5, 65, 41], [11, 36, 16, 5, 37, 17], [11, 36, 12, 5, 37, 13]\n\t//15\n\t, [5, 109, 87, 1, 110, 88], [5, 65, 41, 5, 66, 42], [5, 54, 24, 7, 55, 25], [11, 36, 12, 7, 37, 13]\n\t//16\n\t, [5, 122, 98, 1, 123, 99], [7, 73, 45, 3, 74, 46], [15, 43, 19, 2, 44, 20], [3, 45, 15, 13, 46, 16]\n\t//17\n\t, [1, 135, 107, 5, 136, 108], [10, 74, 46, 1, 75, 47], [1, 50, 22, 15, 51, 23], [2, 42, 14, 17, 43, 15]\n\t//18\n\t, [5, 150, 120, 1, 151, 121], [9, 69, 43, 4, 70, 44], [17, 50, 22, 1, 51, 23], [2, 42, 14, 19, 43, 15]\n\t//19\n\t, [3, 141, 113, 4, 142, 114], [3, 70, 44, 11, 71, 45], [17, 47, 21, 4, 48, 22], [9, 39, 13, 16, 40, 14]\n\t//20\n\t, [3, 135, 107, 5, 136, 108], [3, 67, 41, 13, 68, 42], [15, 54, 24, 5, 55, 25], [15, 43, 15, 10, 44, 16]\n\t//21\n\t, [4, 144, 116, 4, 145, 117], [17, 68, 42], [17, 50, 22, 6, 51, 23], [19, 46, 16, 6, 47, 17]\n\t//22\n\t, [2, 139, 111, 7, 140, 112], [17, 74, 46], [7, 54, 24, 16, 55, 25], [34, 37, 13]\n\t//23\n\t, [4, 151, 121, 5, 152, 122], [4, 75, 47, 14, 76, 48], [11, 54, 24, 14, 55, 25], [16, 45, 15, 14, 46, 16]\n\t//24\n\t, [6, 147, 117, 4, 148, 118], [6, 73, 45, 14, 74, 46], [11, 54, 24, 16, 55, 25], [30, 46, 16, 2, 47, 17]\n\t//25\n\t, [8, 132, 106, 4, 133, 107], [8, 75, 47, 13, 76, 48], [7, 54, 24, 22, 55, 25], [22, 45, 15, 13, 46, 16]\n\t//26\n\t, [10, 142, 114, 2, 143, 115], [19, 74, 46, 4, 75, 47], [28, 50, 22, 6, 51, 23], [33, 46, 16, 4, 47, 17]\n\t//27\n\t, [8, 152, 122, 4, 153, 123], [22, 73, 45, 3, 74, 46], [8, 53, 23, 26, 54, 24], [12, 45, 15, 28, 46, 16]\n\t//28\n\t, [3, 147, 117, 10, 148, 118], [3, 73, 45, 23, 74, 46], [4, 54, 24, 31, 55, 25], [11, 45, 15, 31, 46, 16]\n\t//29\n\t, [7, 146, 116, 7, 147, 117], [21, 73, 45, 7, 74, 46], [1, 53, 23, 37, 54, 24], [19, 45, 15, 26, 46, 16]\n\t//30\n\t, [5, 145, 115, 10, 146, 116], [19, 75, 47, 10, 76, 48], [15, 54, 24, 25, 55, 25], [23, 45, 15, 25, 46, 16]\n\t//31\n\t, [13, 145, 115, 3, 146, 116], [2, 74, 46, 29, 75, 47], [42, 54, 24, 1, 55, 25], [23, 45, 15, 28, 46, 16]\n\t//32\n\t, [17, 145, 115], [10, 74, 46, 23, 75, 47], [10, 54, 24, 35, 55, 25], [19, 45, 15, 35, 46, 16]\n\t//33\n\t, [17, 145, 115, 1, 146, 116], [14, 74, 46, 21, 75, 47], [29, 54, 24, 19, 55, 25], [11, 45, 15, 46, 46, 16]\n\t//34\n\t, [13, 145, 115, 6, 146, 116], [14, 74, 46, 23, 75, 47], [44, 54, 24, 7, 55, 25], [59, 46, 16, 1, 47, 17]\n\t//35\n\t, [12, 151, 121, 7, 152, 122], [12, 75, 47, 26, 76, 48], [39, 54, 24, 14, 55, 25], [22, 45, 15, 41, 46, 16]\n\t//36\n\t, [6, 151, 121, 14, 152, 122], [6, 75, 47, 34, 76, 48], [46, 54, 24, 10, 55, 25], [2, 45, 15, 64, 46, 16]\n\t//37\n\t, [17, 152, 122, 4, 153, 123], [29, 74, 46, 14, 75, 47], [49, 54, 24, 10, 55, 25], [24, 45, 15, 46, 46, 16]\n\t//38\n\t, [4, 152, 122, 18, 153, 123], [13, 74, 46, 32, 75, 47], [48, 54, 24, 14, 55, 25], [42, 45, 15, 32, 46, 16]\n\t//39\n\t, [20, 147, 117, 4, 148, 118], [40, 75, 47, 7, 76, 48], [43, 54, 24, 22, 55, 25], [10, 45, 15, 67, 46, 16]\n\t//40\n\t, [19, 148, 118, 6, 149, 119], [18, 75, 47, 31, 76, 48], [34, 54, 24, 34, 55, 25], [20, 45, 15, 61, 46, 16]];\n\t\n\tQRRSBlock.getRSBlocks = function (typeNumber, errorCorrectLevel) {\n\t\n\t    var rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n\t\n\t    if (rsBlock == undefined) {\n\t        throw new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\n\t    }\n\t\n\t    var length = rsBlock.length / 3;\n\t\n\t    var list = new Array();\n\t\n\t    for (var i = 0; i < length; i++) {\n\t\n\t        var count = rsBlock[i * 3 + 0];\n\t        var totalCount = rsBlock[i * 3 + 1];\n\t        var dataCount = rsBlock[i * 3 + 2];\n\t\n\t        for (var j = 0; j < count; j++) {\n\t            list.push(new QRRSBlock(totalCount, dataCount));\n\t        }\n\t    }\n\t\n\t    return list;\n\t};\n\t\n\tQRRSBlock.getRsBlockTable = function (typeNumber, errorCorrectLevel) {\n\t\n\t    switch (errorCorrectLevel) {\n\t        case QRErrorCorrectLevel.L:\n\t            return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n\t        case QRErrorCorrectLevel.M:\n\t            return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n\t        case QRErrorCorrectLevel.Q:\n\t            return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n\t        case QRErrorCorrectLevel.H:\n\t            return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n\t        default:\n\t            return undefined;\n\t    }\n\t};\n\t\n\t//---------------------------------------------------------------------\n\t// QRBitBuffer\n\t//---------------------------------------------------------------------\n\t\n\tfunction QRBitBuffer() {\n\t    this.buffer = new Array();\n\t    this.length = 0;\n\t}\n\t\n\tQRBitBuffer.prototype = {\n\t\n\t    get: function get(index) {\n\t        var bufIndex = Math.floor(index / 8);\n\t        return (this.buffer[bufIndex] >>> 7 - index % 8 & 1) == 1;\n\t    },\n\t\n\t    put: function put(num, length) {\n\t        for (var i = 0; i < length; i++) {\n\t            this.putBit((num >>> length - i - 1 & 1) == 1);\n\t        }\n\t    },\n\t\n\t    getLengthInBits: function getLengthInBits() {\n\t        return this.length;\n\t    },\n\t\n\t    putBit: function putBit(bit) {\n\t\n\t        var bufIndex = Math.floor(this.length / 8);\n\t        if (this.buffer.length <= bufIndex) {\n\t            this.buffer.push(0);\n\t        }\n\t\n\t        if (bit) {\n\t            this.buffer[bufIndex] |= 0x80 >>> this.length % 8;\n\t        }\n\t\n\t        this.length++;\n\t    }\n\t};\n\t\n\texports.QRCapacityTable = [[17, 14, 11, 7], [32, 26, 20, 14], [53, 42, 32, 24], [78, 62, 46, 34], [106, 84, 60, 44], [134, 106, 74, 58], [154, 122, 86, 64], [192, 152, 108, 84], [230, 180, 130, 98], [271, 213, 151, 119], [321, 251, 177, 137] //11\n\t, [367, 287, 203, 155], [425, 331, 241, 177], [458, 362, 258, 194], [520, 412, 292, 220], [586, 450, 322, 250], [644, 504, 364, 280], [718, 560, 394, 310], [792, 624, 442, 338], [858, 666, 482, 382], [929, 711, 509, 403], [1003, 779, 565, 439], [1091, 857, 611, 461], [1171, 911, 661, 511] //24\n\t, [1273, 997, 715, 535], [1367, 1059, 751, 593], [1465, 1125, 805, 625], [1528, 1190, 868, 658] //28\n\t, [1628, 1264, 908, 698], [1732, 1370, 982, 742], [1840, 1452, 1030, 790], [1952, 1538, 1112, 842] //32\n\t, [2068, 1628, 1168, 898], [2188, 1722, 1228, 958], [2303, 1809, 1283, 983], [2431, 1911, 1351, 1051] //36\n\t, [2563, 1989, 1423, 1093], [2699, 2099, 1499, 1139], [2809, 2213, 1579, 1219], [2953, 2331, 1663, 1273] //40\n\t];\n\t\n\tfunction UTF8Array(source) {\n\t    if (Array.isArray(source)) {\n\t        return new Uint8Array(source);\n\t    }\n\t\n\t    return from_utf(source);\n\t}\n\t\n\texports.UTF8Array = UTF8Array;\n\t\n\tfunction from_utf(str) {\n\t    var arr = [],\n\t        code;\n\t\n\t    for (var i = 0, len = str.length; i < len; ++i) {\n\t        code = fixed_cca(str, i);\n\t\n\t        if (code === false) {\n\t            continue;\n\t        }\n\t\n\t        if (code < 0x80) {\n\t            arr[arr.length] = code;\n\t\n\t            continue;\n\t        }\n\t\n\t        codepoint_to_bytes(arr, code);\n\t    }\n\t\n\t    return new Uint8Array(arr);\n\t}\n\t\n\tfunction codepoint_to_bytes(arr, code) {\n\t    // find MSB, use that to determine byte count\n\t    var copy_code = code,\n\t        bit_count = 0,\n\t        byte_count,\n\t        prefix,\n\t        _byte,\n\t        pos;\n\t\n\t    do {\n\t        ++bit_count;\n\t    } while (copy_code >>>= 1);\n\t\n\t    byte_count = Math.ceil((bit_count - 1) / 5) | 0;\n\t    prefix = [0, 0, 0xc0, 0xe0, 0xf0, 0xf8, 0xfc][byte_count];\n\t    pos = [0, 0, 3, 4, 5, 6, 7][byte_count];\n\t\n\t    _byte |= prefix;\n\t\n\t    bit_count = 7 - pos + 6 * (byte_count - 1);\n\t\n\t    while (bit_count) {\n\t        _byte |= +!!(code & 1 << bit_count) << 7 - pos;\n\t        ++pos;\n\t\n\t        if (pos % 8 === 0) {\n\t            arr[arr.length] = _byte;\n\t            _byte = 0x80;\n\t            pos = 2;\n\t        }\n\t\n\t        --bit_count;\n\t    }\n\t\n\t    if (pos) {\n\t        _byte |= +!!(code & 1) << 7 - pos;\n\t        arr[arr.length] = _byte;\n\t    }\n\t}\n\t\n\tfunction fixed_cca(str, idx) {\n\t    idx = idx || 0;\n\t\n\t    var code = str.charCodeAt(idx),\n\t        lo,\n\t        hi;\n\t\n\t    if (0xD800 <= code && code <= 0xDBFF) {\n\t        lo = str.charCodeAt(idx + 1);\n\t        hi = code;\n\t\n\t        if (isNaN(lo)) {\n\t            throw new Error('High surrogate not followed by low surrogate');\n\t        }\n\t\n\t        return (hi - 0xD800) * 0x400 + (lo - 0xDC00) + 0x10000;\n\t    }\n\t\n\t    if (0xDC00 <= code && code <= 0xDFFF) {\n\t        return false;\n\t    }\n\t\n\t    return code;\n\t}\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** index.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 11bb02e5b5e099022f63\n **/","const React = require('react');\nconst {QRCode, QRErrorCorrectLevel, QRCapacityTable, UTF8Array} = require('./qrcode');\n\nconst SUPPORT_CANVAS = !!document.createElement('canvas').getContext;\nconst SUPPORT_SVG = !!(document.createElementNS && document.createElementNS('http://www.w3.org/2000/svg', 'svg').createSVGRect);\n\nfunction getQRVersion(text, ecl) {\n    let c = UTF8Array(text).length,\n        eci = [QRErrorCorrectLevel.L, QRErrorCorrectLevel.M, QRErrorCorrectLevel.Q, QRErrorCorrectLevel.H],\n        capacity = 0, version;\n\n    //figure out what version can hold the amount of text\n    for (var i=0,j=QRCapacityTable.length;i<j;i++) {\n        capacity = QRCapacityTable[i][eci[ecl]];\n        if (c < QRCapacityTable[i][eci[ecl]]) {\n            version = i + 1;\n            break;\n        }\n    }\n\n    if (!version) {\n        version = QRCapacityTable.length - 1;\n    }\n\n    if (capacity < c) {\n        throw new Error(\"Content too long\");\n    }\n\n    return version;\n}\n\nclass ReactQRCode extends React.Component {\n    render() {\n        let renderer = this.props.render || this.props.renderer;\n        if (!renderer || renderer === 'auto') {\n            renderer = SUPPORT_SVG ? 'svg' : (SUPPORT_CANVAS ? 'canvas' : '');\n        }\n        if (renderer === 'canvas') {\n            return <CanvasQRCode {...this.props} />;\n        } else {\n            return <SvgQRCode {...this.props} />;\n        }\n    }\n}\n\nclass SvgQRCode extends React.Component {\n    componentWillMount() {\n        this.qrcode = new QRCode(getQRVersion(this.props.content, QRErrorCorrectLevel.M), QRErrorCorrectLevel.M);\n        this.qrcode.addData(this.props.content);\n        this.qrcode.make();\n    }\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.content !== this.props.content) {\n            this.qrcode = new QRCode(getQRVersion(nextProps.content, QRErrorCorrectLevel.M), QRErrorCorrectLevel.M);\n            this.qrcode.addData(nextProps.content);\n            this.qrcode.make();\n        }\n    }\n\n    render() {\n        let props = this.props;\n        let qrcode = this.qrcode;\n        let count = qrcode.getModuleCount();\n        let scale = +props.scale || 4;\n        let margin = +props.margin || 20;\n        let size = count * scale + margin * 2;\n\n        let rects = [<rect key=\"background\" x=\"0\" y=\"0\" width={size} height={size} style={{\"fill\":props.background, shapeRendering:\"crispEdges\"}}/>];\n\n        let currenty = margin, currentx;\n        for (let row = 0; row < count; row++) {\n            currentx = margin;\n            for (let col = 0; col < count; col++) {\n                if (qrcode.isDark(row, col)) {\n                    rects.push(<rect key={(row + '-' + col)} x={currentx} y={currenty} width={scale} height={scale} style={{\"fill\":props.foreground, shapeRendering:\"crispEdges\"}}/>);\n                }\n                currentx += scale;\n            }\n            currenty += scale;\n        }\n\n        return <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width={size} height={size}>{rects}</svg>;\n    }\n}\n\nclass CanvasQRCode extends React.Component {\n    componentWillMount() {\n        this.qrcode = new QRCode(getQRVersion(this.props.content, QRErrorCorrectLevel.M), QRErrorCorrectLevel.M);\n        this.qrcode.addData(this.props.content);\n        this.qrcode.make();\n    }\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.content !== this.props.content) {\n            this.qrcode = new QRCode(getQRVersion(nextProps.content, QRErrorCorrectLevel.M), QRErrorCorrectLevel.M);\n            this.qrcode.addData(nextProps.content);\n            this.qrcode.make();\n        }\n    }\n\n    componentDidMount() {\n        this.draw();\n    }\n\n    componentDidUpdate() {\n        this.draw();\n    }\n\n    draw() {\n        let props = this.props;\n        let qrcode = this.qrcode;\n        let canvas = ReactDOM.findDOMNode(this);\n        let ctx = canvas.getContext('2d');\n        let count = qrcode.getModuleCount();\n        let scale = +props.scale || 4;\n        let margin = +props.margin || 20;\n        let size = count * scale + margin * 2;\n\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        canvas.style.height = canvas.height = size;\n        canvas.style.width = canvas.width = size;\n        ctx.fillStyle = props.background;\n        ctx.fillRect(0, 0, size, size);\n\n        ctx.fillStyle = props.foreground;\n        let currenty = margin, currentx;\n        // draw in the canvas\n        for (let row = 0; row < count; row++) {\n            currentx = margin;\n            for (let col = 0; col < count; col++) {\n                if (qrcode.isDark(row, col)) {\n                    ctx.fillRect(currentx, currenty, scale, scale);\n                }\n                currentx += scale;\n            }\n            currenty += scale;\n        }\n    }\n\n    render() {\n        return <canvas />;\n    }\n}\n\nReactQRCode.defaultProps = {\n    renderer: \"canvas\",\n    content: \"\",\n    scale: 4,\n    margin: 20,\n    background: \"white\",\n    foreground: \"black\"\n};\n\nReactQRCode.propTypes = {\n    renderer: React.PropTypes.oneOf(['canvas', 'svg', 'auto']),\n    content: React.PropTypes.string,\n    scale: React.PropTypes.oneOfType([\n        React.PropTypes.number,\n        React.PropTypes.string\n    ]),\n    margin: React.PropTypes.oneOfType([\n        React.PropTypes.number,\n        React.PropTypes.string\n    ]),\n    background: React.PropTypes.string,\n    foreground: React.PropTypes.string\n};\n\nmodule.exports = ReactQRCode;\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"React\",\"var\":\"window.React\",\"commonjs\":\"react\",\"commonjs2\":\"react\",\"amd\":\"react\"}\n ** module id = 1\n ** module chunks = 0\n **/","/**\n * QRCode for JavaScript\n *\n * modified by Ryan Day for nodejs support\n * Copyright (c) 2011 Ryan Day\n *\n * Licensed under the MIT license:\n *   http://www.opensource.org/licenses/mit-license.php\n *\n * EXPORTS:\n *    {\n *\tQRCode:QRCode\n *\tQRErrorCorrectLevel:QRErrorCorrectLevel\n *\t}\n //---------------------------------------------------------------------\n // QRCode for JavaScript\n //\n // Copyright (c) 2009 Kazuhiko Arase\n //\n // URL: http://www.d-project.com/\n //\n // Licensed under the MIT license:\n //   http://www.opensource.org/licenses/mit-license.php\n //\n // The word \"QR Code\" is registered trademark of\n // DENSO WAVE INCORPORATED\n //   http://www.denso-wave.com/qrcode/faqpatent-e.html\n //\n //---------------------------------------------------------------------\n */\n\n//---------------------------------------------------------------------\n// QRCode\n//---------------------------------------------------------------------\n\nexports.QRCode = QRCode;\n\nvar QRDataArray = (typeof Uint32Array == 'undefined' ? Uint32Array : Array);\n\nfunction QRCode(typeNumber, errorCorrectLevel) {\n    this.typeNumber = typeNumber;\n    this.errorCorrectLevel = errorCorrectLevel;\n    this.modules = null;\n    this.moduleCount = 0;\n    this.dataCache = null;\n    this.dataList = new QRDataArray();\n}\n\nQRCode.prototype = {\n\n    addData: function (data) {\n        var newData = new QR8bitByte(data);\n\n        this.dataList.push(newData);\n        this.dataCache = null;\n    },\n\n    isDark: function (row, col) {\n        if (row < 0 || this.moduleCount <= row || col < 0 || this.moduleCount <= col) {\n            throw new Error(row + \",\" + col);\n        }\n        return this.modules[row][col];\n    },\n\n    getModuleCount: function () {\n        return this.moduleCount;\n    },\n\n    make: function () {\n        this.makeImpl(false, this.getBestMaskPattern());\n    },\n\n    makeImpl: function (test, maskPattern) {\n\n        this.moduleCount = this.typeNumber * 4 + 17;\n        this.modules = new QRDataArray(this.moduleCount);\n\n        for (var row = 0; row < this.moduleCount; row++) {\n\n            this.modules[row] = new QRDataArray(this.moduleCount);\n\n            for (var col = 0; col < this.moduleCount; col++) {\n                this.modules[row][col] = null;//(col + row) % 3;\n            }\n        }\n\n        this.setupPositionProbePattern(0, 0);\n        this.setupPositionProbePattern(this.moduleCount - 7, 0);\n        this.setupPositionProbePattern(0, this.moduleCount - 7);\n        this.setupPositionAdjustPattern();\n        this.setupTimingPattern();\n        this.setupTypeInfo(test, maskPattern);\n\n        if (this.typeNumber >= 7) {\n            this.setupTypeNumber(test);\n        }\n\n        if (this.dataCache == null) {\n            this.dataCache = QRCode.createData(this.typeNumber, this.errorCorrectLevel, this.dataList);\n        }\n\n        this.mapData(this.dataCache, maskPattern);\n    },\n\n    setupPositionProbePattern: function (row, col) {\n\n        for (var r = -1; r <= 7; r++) {\n\n            if (row + r <= -1 || this.moduleCount <= row + r) continue;\n\n            for (var c = -1; c <= 7; c++) {\n\n                if (col + c <= -1 || this.moduleCount <= col + c) continue;\n\n                if ((0 <= r && r <= 6 && (c == 0 || c == 6) )\n                    || (0 <= c && c <= 6 && (r == 0 || r == 6) )\n                    || (2 <= r && r <= 4 && 2 <= c && c <= 4)) {\n                    this.modules[row + r][col + c] = true;\n                } else {\n                    this.modules[row + r][col + c] = false;\n                }\n            }\n        }\n    },\n\n    getBestMaskPattern: function () {\n\n        var minLostPoint = 0;\n        var pattern = 0;\n\n        for (var i = 0; i < 8; i++) {\n\n            this.makeImpl(true, i);\n\n            var lostPoint = QRUtil.getLostPoint(this);\n\n            if (i == 0 || minLostPoint > lostPoint) {\n                minLostPoint = lostPoint;\n                pattern = i;\n            }\n        }\n\n        return pattern;\n    },\n\n    setupTimingPattern: function () {\n\n        for (var r = 8; r < this.moduleCount - 8; r++) {\n            if (this.modules[r][6] != null) {\n                continue;\n            }\n            this.modules[r][6] = (r % 2 == 0);\n        }\n\n        for (var c = 8; c < this.moduleCount - 8; c++) {\n            if (this.modules[6][c] != null) {\n                continue;\n            }\n            this.modules[6][c] = (c % 2 == 0);\n        }\n    },\n\n    setupPositionAdjustPattern: function () {\n\n        var pos = QRUtil.getPatternPosition(this.typeNumber);\n        pos = pos || '';\n        for (var i = 0; i < pos.length; i++) {\n\n            for (var j = 0; j < pos.length; j++) {\n\n                var row = pos[i];\n                var col = pos[j];\n\n                if (this.modules[row][col] != null) {\n                    continue;\n                }\n\n                for (var r = -2; r <= 2; r++) {\n\n                    for (var c = -2; c <= 2; c++) {\n\n                        if (r == -2 || r == 2 || c == -2 || c == 2\n                            || (r == 0 && c == 0)) {\n                            this.modules[row + r][col + c] = true;\n                        } else {\n                            this.modules[row + r][col + c] = false;\n                        }\n                    }\n                }\n            }\n        }\n    },\n\n    setupTypeNumber: function (test) {\n\n        var bits = QRUtil.getBCHTypeNumber(this.typeNumber);\n\n        for (var i = 0; i < 18; i++) {\n            var mod = (!test && ( (bits >> i) & 1) == 1);\n            this.modules[Math.floor(i / 3)][i % 3 + this.moduleCount - 8 - 3] = mod;\n        }\n\n        for (var i = 0; i < 18; i++) {\n            var mod = (!test && ( (bits >> i) & 1) == 1);\n            this.modules[i % 3 + this.moduleCount - 8 - 3][Math.floor(i / 3)] = mod;\n        }\n    },\n\n    setupTypeInfo: function (test, maskPattern) {\n\n        var data = (this.errorCorrectLevel << 3) | maskPattern;\n        var bits = QRUtil.getBCHTypeInfo(data);\n\n        // vertical\n        for (var i = 0; i < 15; i++) {\n\n            var mod = (!test && ( (bits >> i) & 1) == 1);\n\n            if (i < 6) {\n                this.modules[i][8] = mod;\n            } else if (i < 8) {\n                this.modules[i + 1][8] = mod;\n            } else {\n                this.modules[this.moduleCount - 15 + i][8] = mod;\n            }\n        }\n\n        // horizontal\n        for (var i = 0; i < 15; i++) {\n\n            var mod = (!test && ( (bits >> i) & 1) == 1);\n\n            if (i < 8) {\n                this.modules[8][this.moduleCount - i - 1] = mod;\n            } else if (i < 9) {\n                this.modules[8][15 - i - 1 + 1] = mod;\n            } else {\n                this.modules[8][15 - i - 1] = mod;\n            }\n        }\n\n        // fixed module\n        this.modules[this.moduleCount - 8][8] = (!test);\n\n    },\n\n    mapData: function (data, maskPattern) {\n\n        var inc = -1;\n        var row = this.moduleCount - 1;\n        var bitIndex = 7;\n        var byteIndex = 0;\n\n        for (var col = this.moduleCount - 1; col > 0; col -= 2) {\n\n            if (col == 6) col--;\n\n            while (true) {\n\n                for (var c = 0; c < 2; c++) {\n\n                    if (this.modules[row][col - c] == null) {\n\n                        var dark = false;\n\n                        if (byteIndex < data.length) {\n                            dark = ( ( (data[byteIndex] >>> bitIndex) & 1) == 1);\n                        }\n\n                        var mask = QRUtil.getMask(maskPattern, row, col - c);\n\n                        if (mask) {\n                            dark = !dark;\n                        }\n\n                        this.modules[row][col - c] = dark;\n                        bitIndex--;\n\n                        if (bitIndex == -1) {\n                            byteIndex++;\n                            bitIndex = 7;\n                        }\n                    }\n                }\n\n                row += inc;\n\n                if (row < 0 || this.moduleCount <= row) {\n                    row -= inc;\n                    inc = -inc;\n                    break;\n                }\n            }\n        }\n\n    }\n\n};\n\nQRCode.PAD0 = 0xEC;\nQRCode.PAD1 = 0x11;\n\nQRCode.createData = function (typeNumber, errorCorrectLevel, dataList) {\n\n    var rsBlocks = QRRSBlock.getRSBlocks(typeNumber, errorCorrectLevel);\n\n    var buffer = new QRBitBuffer();\n\n    for (var i = 0; i < dataList.length; i++) {\n        var data = dataList[i];\n        buffer.put(data.mode, 4);\n        buffer.put(data.getLength(), QRUtil.getLengthInBits(data.mode, typeNumber));\n        data.write(buffer);\n    }\n\n    // calc num max data.\n    var totalDataCount = 0;\n    for (var i = 0; i < rsBlocks.length; i++) {\n        totalDataCount += rsBlocks[i].dataCount;\n    }\n\n    if (buffer.getLengthInBits() > totalDataCount * 8) {\n        throw new Error(\"code length overflow. (\"\n            + buffer.getLengthInBits()\n            + \">\"\n            + totalDataCount * 8\n            + \")\");\n    }\n\n    // end code\n    if (buffer.getLengthInBits() + 4 <= totalDataCount * 8) {\n        buffer.put(0, 4);\n    }\n\n    // padding\n    while (buffer.getLengthInBits() % 8 != 0) {\n        buffer.putBit(false);\n    }\n\n    // padding\n    while (true) {\n\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n            break;\n        }\n        buffer.put(QRCode.PAD0, 8);\n\n        if (buffer.getLengthInBits() >= totalDataCount * 8) {\n            break;\n        }\n        buffer.put(QRCode.PAD1, 8);\n    }\n\n    return QRCode.createBytes(buffer, rsBlocks);\n};\n\nQRCode.createBytes = function (buffer, rsBlocks) {\n\n    var offset = 0;\n\n    var maxDcCount = 0;\n    var maxEcCount = 0;\n\n    var dcdata = new QRDataArray(rsBlocks.length);\n    var ecdata = new QRDataArray(rsBlocks.length);\n\n    for (var r = 0; r < rsBlocks.length; r++) {\n\n        var dcCount = rsBlocks[r].dataCount;\n        var ecCount = rsBlocks[r].totalCount - dcCount;\n\n        maxDcCount = Math.max(maxDcCount, dcCount);\n        maxEcCount = Math.max(maxEcCount, ecCount);\n\n        dcdata[r] = new QRDataArray(dcCount);\n\n        for (var i = 0; i < dcdata[r].length; i++) {\n            dcdata[r][i] = 0xff & buffer.buffer[i + offset];\n        }\n        offset += dcCount;\n\n        var rsPoly = QRUtil.getErrorCorrectPolynomial(ecCount);\n        var rawPoly = new QRPolynomial(dcdata[r], rsPoly.getLength() - 1);\n\n        var modPoly = rawPoly.mod(rsPoly);\n        ecdata[r] = new QRDataArray(rsPoly.getLength() - 1);\n        for (var i = 0; i < ecdata[r].length; i++) {\n            var modIndex = i + modPoly.getLength() - ecdata[r].length;\n            ecdata[r][i] = (modIndex >= 0) ? modPoly.get(modIndex) : 0;\n        }\n\n    }\n\n    var totalCodeCount = 0;\n    for (var i = 0; i < rsBlocks.length; i++) {\n        totalCodeCount += rsBlocks[i].totalCount;\n    }\n\n    var data = new QRDataArray(totalCodeCount);\n    var index = 0;\n\n    for (var i = 0; i < maxDcCount; i++) {\n        for (var r = 0; r < rsBlocks.length; r++) {\n            if (i < dcdata[r].length) {\n                data[index++] = dcdata[r][i];\n            }\n        }\n    }\n\n    for (var i = 0; i < maxEcCount; i++) {\n        for (var r = 0; r < rsBlocks.length; r++) {\n            if (i < ecdata[r].length) {\n                data[index++] = ecdata[r][i];\n            }\n        }\n    }\n\n    return data;\n\n};\n\n//---------------------------------------------------------------------\n// QR8bitByte\n//---------------------------------------------------------------------\nfunction QR8bitByte(data) {\n    this.mode = QRMode.MODE_8BIT_BYTE;\n    this.data = data;\n    this.parsedData = UTF8Array(data);\n}\n\nQR8bitByte.prototype = {\n    getLength: function (buffer) {\n        return this.parsedData.length;\n    },\n    write: function (buffer) {\n        for (var i = 0, l = this.parsedData.length; i < l; i++) {\n            buffer.put(this.parsedData[i], 8);\n        }\n    }\n};\n\n\n//---------------------------------------------------------------------\n// QRMode\n//---------------------------------------------------------------------\n\nvar QRMode = {\n    MODE_NUMBER: 1 << 0,\n    MODE_ALPHA_NUM: 1 << 1,\n    MODE_8BIT_BYTE: 1 << 2,\n    MODE_KANJI: 1 << 3\n};\n\n//---------------------------------------------------------------------\n// QRErrorCorrectLevel\n//---------------------------------------------------------------------\n//exported\n\nvar QRErrorCorrectLevel = exports.QRErrorCorrectLevel = {\n    L: 1,\n    M: 0,\n    Q: 3,\n    H: 2\n};\n\n//---------------------------------------------------------------------\n// QRMaskPattern\n//---------------------------------------------------------------------\n\nvar QRMaskPattern = {\n    PATTERN000: 0,\n    PATTERN001: 1,\n    PATTERN010: 2,\n    PATTERN011: 3,\n    PATTERN100: 4,\n    PATTERN101: 5,\n    PATTERN110: 6,\n    PATTERN111: 7\n};\n\n//---------------------------------------------------------------------\n// QRUtil\n//---------------------------------------------------------------------\n\nvar QRUtil = {\n\n    PATTERN_POSITION_TABLE: [\n        [],\n        [6, 18],\n        [6, 22],\n        [6, 26],\n        [6, 30],\n        [6, 34],\n        [6, 22, 38],\n        [6, 24, 42],\n        [6, 26, 46],\n        [6, 28, 50],\n        [6, 30, 54],\n        [6, 32, 58],\n        [6, 34, 62],\n        [6, 26, 46, 66],\n        [6, 26, 48, 70],\n        [6, 26, 50, 74],\n        [6, 30, 54, 78],\n        [6, 30, 56, 82],\n        [6, 30, 58, 86],\n        [6, 34, 62, 90],\n        [6, 28, 50, 72, 94],\n        [6, 26, 50, 74, 98],\n        [6, 30, 54, 78, 102],\n        [6, 28, 54, 80, 106],\n        [6, 32, 58, 84, 110],\n        [6, 30, 58, 86, 114],\n        [6, 34, 62, 90, 118],\n        [6, 26, 50, 74, 98, 122],\n        [6, 30, 54, 78, 102, 126],\n        [6, 26, 52, 78, 104, 130],\n        [6, 30, 56, 82, 108, 134],\n        [6, 34, 60, 86, 112, 138],\n        [6, 30, 58, 86, 114, 142],\n        [6, 34, 62, 90, 118, 146],\n        [6, 30, 54, 78, 102, 126, 150],\n        [6, 24, 50, 76, 102, 128, 154],\n        [6, 28, 54, 80, 106, 132, 158],\n        [6, 32, 58, 84, 110, 136, 162],\n        [6, 26, 54, 82, 110, 138, 166],\n        [6, 30, 58, 86, 114, 142, 170]\n    ],\n\n    G15: (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0),\n    G18: (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0),\n    G15_MASK: (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1),\n\n    getBCHTypeInfo: function (data) {\n        var d = data << 10;\n        while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) >= 0) {\n            d ^= (QRUtil.G15 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G15) ) );\n        }\n        return ( (data << 10) | d) ^ QRUtil.G15_MASK;\n    },\n\n    getBCHTypeNumber: function (data) {\n        var d = data << 12;\n        while (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) >= 0) {\n            d ^= (QRUtil.G18 << (QRUtil.getBCHDigit(d) - QRUtil.getBCHDigit(QRUtil.G18) ) );\n        }\n        return (data << 12) | d;\n    },\n\n    getBCHDigit: function (data) {\n\n        var digit = 0;\n\n        while (data != 0) {\n            digit++;\n            data >>>= 1;\n        }\n\n        return digit;\n    },\n\n    getPatternPosition: function (typeNumber) {\n        return QRUtil.PATTERN_POSITION_TABLE[typeNumber - 1];\n    },\n\n    getMask: function (maskPattern, i, j) {\n\n        switch (maskPattern) {\n\n            case QRMaskPattern.PATTERN000 :\n                return (i + j) % 2 == 0;\n            case QRMaskPattern.PATTERN001 :\n                return i % 2 == 0;\n            case QRMaskPattern.PATTERN010 :\n                return j % 3 == 0;\n            case QRMaskPattern.PATTERN011 :\n                return (i + j) % 3 == 0;\n            case QRMaskPattern.PATTERN100 :\n                return (Math.floor(i / 2) + Math.floor(j / 3) ) % 2 == 0;\n            case QRMaskPattern.PATTERN101 :\n                return (i * j) % 2 + (i * j) % 3 == 0;\n            case QRMaskPattern.PATTERN110 :\n                return ( (i * j) % 2 + (i * j) % 3) % 2 == 0;\n            case QRMaskPattern.PATTERN111 :\n                return ( (i * j) % 3 + (i + j) % 2) % 2 == 0;\n\n            default :\n                throw new Error(\"bad maskPattern:\" + maskPattern);\n        }\n    },\n\n    getErrorCorrectPolynomial: function (errorCorrectLength) {\n\n        var a = new QRPolynomial([1], 0);\n\n        for (var i = 0; i < errorCorrectLength; i++) {\n            a = a.multiply(new QRPolynomial([1, QRMath.gexp(i)], 0));\n        }\n\n        return a;\n    },\n\n    getLengthInBits: function (mode, type) {\n\n        if (1 <= type && type < 10) {\n\n            // 1 - 9\n\n            switch (mode) {\n                case QRMode.MODE_NUMBER    :\n                    return 10;\n                case QRMode.MODE_ALPHA_NUM    :\n                    return 9;\n                case QRMode.MODE_8BIT_BYTE    :\n                    return 8;\n                case QRMode.MODE_KANJI    :\n                    return 8;\n                default :\n                    throw new Error(\"mode:\" + mode);\n            }\n\n        } else if (type < 27) {\n\n            // 10 - 26\n\n            switch (mode) {\n                case QRMode.MODE_NUMBER    :\n                    return 12;\n                case QRMode.MODE_ALPHA_NUM    :\n                    return 11;\n                case QRMode.MODE_8BIT_BYTE    :\n                    return 16;\n                case QRMode.MODE_KANJI    :\n                    return 10;\n                default :\n                    throw new Error(\"mode:\" + mode);\n            }\n\n        } else if (type < 41) {\n\n            // 27 - 40\n\n            switch (mode) {\n                case QRMode.MODE_NUMBER    :\n                    return 14;\n                case QRMode.MODE_ALPHA_NUM    :\n                    return 13;\n                case QRMode.MODE_8BIT_BYTE    :\n                    return 16;\n                case QRMode.MODE_KANJI    :\n                    return 12;\n                default :\n                    throw new Error(\"mode:\" + mode);\n            }\n\n        } else {\n            throw new Error(\"type:\" + type);\n        }\n    },\n\n    getLostPoint: function (qrCode) {\n\n        var moduleCount = qrCode.getModuleCount();\n\n        var lostPoint = 0;\n\n        // LEVEL1\n\n        for (var row = 0; row < moduleCount; row++) {\n\n            for (var col = 0; col < moduleCount; col++) {\n\n                var sameCount = 0;\n                var dark = qrCode.isDark(row, col);\n\n                for (var r = -1; r <= 1; r++) {\n\n                    if (row + r < 0 || moduleCount <= row + r) {\n                        continue;\n                    }\n\n                    for (var c = -1; c <= 1; c++) {\n\n                        if (col + c < 0 || moduleCount <= col + c) {\n                            continue;\n                        }\n\n                        if (r == 0 && c == 0) {\n                            continue;\n                        }\n\n                        if (dark == qrCode.isDark(row + r, col + c)) {\n                            sameCount++;\n                        }\n                    }\n                }\n\n                if (sameCount > 5) {\n                    lostPoint += (3 + sameCount - 5);\n                }\n            }\n        }\n\n        // LEVEL2\n\n        for (var row = 0; row < moduleCount - 1; row++) {\n            for (var col = 0; col < moduleCount - 1; col++) {\n                var count = 0;\n                if (qrCode.isDark(row, col)) count++;\n                if (qrCode.isDark(row + 1, col)) count++;\n                if (qrCode.isDark(row, col + 1)) count++;\n                if (qrCode.isDark(row + 1, col + 1)) count++;\n                if (count == 0 || count == 4) {\n                    lostPoint += 3;\n                }\n            }\n        }\n\n        // LEVEL3\n\n        for (var row = 0; row < moduleCount; row++) {\n            for (var col = 0; col < moduleCount - 6; col++) {\n                if (qrCode.isDark(row, col)\n                    && !qrCode.isDark(row, col + 1)\n                    && qrCode.isDark(row, col + 2)\n                    && qrCode.isDark(row, col + 3)\n                    && qrCode.isDark(row, col + 4)\n                    && !qrCode.isDark(row, col + 5)\n                    && qrCode.isDark(row, col + 6)) {\n                    lostPoint += 40;\n                }\n            }\n        }\n\n        for (var col = 0; col < moduleCount; col++) {\n            for (var row = 0; row < moduleCount - 6; row++) {\n                if (qrCode.isDark(row, col)\n                    && !qrCode.isDark(row + 1, col)\n                    && qrCode.isDark(row + 2, col)\n                    && qrCode.isDark(row + 3, col)\n                    && qrCode.isDark(row + 4, col)\n                    && !qrCode.isDark(row + 5, col)\n                    && qrCode.isDark(row + 6, col)) {\n                    lostPoint += 40;\n                }\n            }\n        }\n\n        // LEVEL4\n\n        var darkCount = 0;\n\n        for (var col = 0; col < moduleCount; col++) {\n            for (var row = 0; row < moduleCount; row++) {\n                if (qrCode.isDark(row, col)) {\n                    darkCount++;\n                }\n            }\n        }\n\n        var ratio = Math.abs(100 * darkCount / moduleCount / moduleCount - 50) / 5;\n        lostPoint += ratio * 10;\n\n        return lostPoint;\n    }\n\n};\n\n\n//---------------------------------------------------------------------\n// QRMath\n//---------------------------------------------------------------------\n\nvar QRMath = {\n\n    glog: function (n) {\n\n        if (n < 1) {\n            throw new Error(\"glog(\" + n + \")\");\n        }\n\n        return QRMath.LOG_TABLE[n];\n    },\n\n    gexp: function (n) {\n\n        while (n < 0) {\n            n += 255;\n        }\n\n        while (n >= 256) {\n            n -= 255;\n        }\n\n        return QRMath.EXP_TABLE[n];\n    },\n\n    EXP_TABLE: new Array(256),\n\n    LOG_TABLE: new Array(256)\n\n};\n\nfor (var i = 0; i < 8; i++) {\n    QRMath.EXP_TABLE[i] = 1 << i;\n}\nfor (var i = 8; i < 256; i++) {\n    QRMath.EXP_TABLE[i] = QRMath.EXP_TABLE[i - 4]\n        ^ QRMath.EXP_TABLE[i - 5]\n        ^ QRMath.EXP_TABLE[i - 6]\n        ^ QRMath.EXP_TABLE[i - 8];\n}\nfor (var i = 0; i < 255; i++) {\n    QRMath.LOG_TABLE[QRMath.EXP_TABLE[i]] = i;\n}\n\n//---------------------------------------------------------------------\n// QRPolynomial\n//---------------------------------------------------------------------\n\nfunction QRPolynomial(num, shift) {\n\n    if (num.length == undefined) {\n        throw new Error(num.length + \"/\" + shift);\n    }\n\n    var offset = 0;\n\n    while (offset < num.length && num[offset] == 0) {\n        offset++;\n    }\n\n    this.num = new Array(num.length - offset + shift);\n    for (var i = 0; i < num.length - offset; i++) {\n        this.num[i] = num[i + offset];\n    }\n}\n\nQRPolynomial.prototype = {\n\n    get: function (index) {\n        return this.num[index];\n    },\n\n    getLength: function () {\n        return this.num.length;\n    },\n\n    multiply: function (e) {\n\n        var num = new Array(this.getLength() + e.getLength() - 1);\n\n        for (var i = 0; i < this.getLength(); i++) {\n            for (var j = 0; j < e.getLength(); j++) {\n                num[i + j] ^= QRMath.gexp(QRMath.glog(this.get(i)) + QRMath.glog(e.get(j)));\n            }\n        }\n\n        return new QRPolynomial(num, 0);\n    },\n\n    mod: function (e) {\n\n        if (this.getLength() - e.getLength() < 0) {\n            return this;\n        }\n\n        var ratio = QRMath.glog(this.get(0)) - QRMath.glog(e.get(0));\n\n        var num = new Array(this.getLength());\n\n        for (var i = 0; i < this.getLength(); i++) {\n            num[i] = this.get(i);\n        }\n\n        for (var i = 0; i < e.getLength(); i++) {\n            num[i] ^= QRMath.gexp(QRMath.glog(e.get(i)) + ratio);\n        }\n\n        // recursive call\n        return new QRPolynomial(num, 0).mod(e);\n    }\n};\n\n//---------------------------------------------------------------------\n// QRRSBlock\n//---------------------------------------------------------------------\n\nfunction QRRSBlock(totalCount, dataCount) {\n    this.totalCount = totalCount;\n    this.dataCount = dataCount;\n}\n\nQRRSBlock.RS_BLOCK_TABLE = [\n// L\n// M\n// Q\n// H\n\n// 1\n    [1, 26, 19],\n    [1, 26, 16],\n    [1, 26, 13],\n    [1, 26, 9],\n// 2\n    [1, 44, 34],\n    [1, 44, 28],\n    [1, 44, 22],\n    [1, 44, 16],\n// 3\n    [1, 70, 55],\n    [1, 70, 44],\n    [2, 35, 17],\n    [2, 35, 13],\n// 4\n    [1, 100, 80],\n    [2, 50, 32],\n    [2, 50, 24],\n    [4, 25, 9],\n// 5\n    [1, 134, 108],\n    [2, 67, 43],\n    [2, 33, 15, 2, 34, 16],\n    [2, 33, 11, 2, 34, 12],\n// 6\n    [2, 86, 68],\n    [4, 43, 27],\n    [4, 43, 19],\n    [4, 43, 15],\n// 7\n    [2, 98, 78],\n    [4, 49, 31],\n    [2, 32, 14, 4, 33, 15],\n    [4, 39, 13, 1, 40, 14],\n// 8\n    [2, 121, 97],\n    [2, 60, 38, 2, 61, 39],\n    [4, 40, 18, 2, 41, 19],\n    [4, 40, 14, 2, 41, 15],\n// 9\n    [2, 146, 116],\n    [3, 58, 36, 2, 59, 37],\n    [4, 36, 16, 4, 37, 17],\n    [4, 36, 12, 4, 37, 13],\n// 10\n    [2, 86, 68, 2, 87, 69],\n    [4, 69, 43, 1, 70, 44],\n    [6, 43, 19, 2, 44, 20],\n    [6, 43, 15, 2, 44, 16]\n//NOTE added by Ryan Day.to make greater than version 10 qrcodes\n// this table starts on page 40 of the spec PDF. google ISO/IEC 18004\n// 11\n    , [4, 101, 81]\n    , [1, 80, 50, 4, 81, 51]\n    , [4, 50, 22, 4, 51, 23]\n    , [3, 36, 12, 8, 37, 13]\n//12\n    , [2, 116, 92, 2, 117, 93]\n    , [6, 58, 36, 2, 59, 37]\n    , [4, 46, 20, 6, 47, 21]\n    , [7, 42, 14, 4, 43, 15]\n//13\n    , [4, 133, 107]\n    , [8, 59, 37, 1, 60, 38]\n    , [8, 44, 20, 4, 45, 21]\n    , [12, 33, 11, 4, 34, 12]\n//14\n    , [3, 145, 115, 1, 146, 116]\n    , [4, 64, 40, 5, 65, 41]\n    , [11, 36, 16, 5, 37, 17]\n    , [11, 36, 12, 5, 37, 13]\n//15\n    , [5, 109, 87, 1, 110, 88]\n    , [5, 65, 41, 5, 66, 42]\n    , [5, 54, 24, 7, 55, 25]\n    , [11, 36, 12, 7, 37, 13]\n//16\n    , [5, 122, 98, 1, 123, 99]\n    , [7, 73, 45, 3, 74, 46]\n    , [15, 43, 19, 2, 44, 20]\n    , [3, 45, 15, 13, 46, 16]\n//17\n    , [1, 135, 107, 5, 136, 108]\n    , [10, 74, 46, 1, 75, 47]\n    , [1, 50, 22, 15, 51, 23]\n    , [2, 42, 14, 17, 43, 15]\n//18\n    , [5, 150, 120, 1, 151, 121]\n    , [9, 69, 43, 4, 70, 44]\n    , [17, 50, 22, 1, 51, 23]\n    , [2, 42, 14, 19, 43, 15]\n//19\n    , [3, 141, 113, 4, 142, 114]\n    , [3, 70, 44, 11, 71, 45]\n    , [17, 47, 21, 4, 48, 22]\n    , [9, 39, 13, 16, 40, 14]\n//20\n    , [3, 135, 107, 5, 136, 108]\n    , [3, 67, 41, 13, 68, 42]\n    , [15, 54, 24, 5, 55, 25]\n    , [15, 43, 15, 10, 44, 16]\n//21\n    , [4, 144, 116, 4, 145, 117]\n    , [17, 68, 42]\n    , [17, 50, 22, 6, 51, 23]\n    , [19, 46, 16, 6, 47, 17]\n//22\n    , [2, 139, 111, 7, 140, 112]\n    , [17, 74, 46]\n    , [7, 54, 24, 16, 55, 25]\n    , [34, 37, 13]\n//23\n    , [4, 151, 121, 5, 152, 122]\n    , [4, 75, 47, 14, 76, 48]\n    , [11, 54, 24, 14, 55, 25]\n    , [16, 45, 15, 14, 46, 16]\n//24\n    , [6, 147, 117, 4, 148, 118]\n    , [6, 73, 45, 14, 74, 46]\n    , [11, 54, 24, 16, 55, 25]\n    , [30, 46, 16, 2, 47, 17]\n//25\n    , [8, 132, 106, 4, 133, 107]\n    , [8, 75, 47, 13, 76, 48]\n    , [7, 54, 24, 22, 55, 25]\n    , [22, 45, 15, 13, 46, 16]\n//26\n    , [10, 142, 114, 2, 143, 115]\n    , [19, 74, 46, 4, 75, 47]\n    , [28, 50, 22, 6, 51, 23]\n    , [33, 46, 16, 4, 47, 17]\n//27\n    , [8, 152, 122, 4, 153, 123]\n    , [22, 73, 45, 3, 74, 46]\n    , [8, 53, 23, 26, 54, 24]\n    , [12, 45, 15, 28, 46, 16]\n//28\n    , [3, 147, 117, 10, 148, 118]\n    , [3, 73, 45, 23, 74, 46]\n    , [4, 54, 24, 31, 55, 25]\n    , [11, 45, 15, 31, 46, 16]\n//29\n    , [7, 146, 116, 7, 147, 117]\n    , [21, 73, 45, 7, 74, 46]\n    , [1, 53, 23, 37, 54, 24]\n    , [19, 45, 15, 26, 46, 16]\n//30\n    , [5, 145, 115, 10, 146, 116]\n    , [19, 75, 47, 10, 76, 48]\n    , [15, 54, 24, 25, 55, 25]\n    , [23, 45, 15, 25, 46, 16]\n//31\n    , [13, 145, 115, 3, 146, 116]\n    , [2, 74, 46, 29, 75, 47]\n    , [42, 54, 24, 1, 55, 25]\n    , [23, 45, 15, 28, 46, 16]\n//32\n    , [17, 145, 115]\n    , [10, 74, 46, 23, 75, 47]\n    , [10, 54, 24, 35, 55, 25]\n    , [19, 45, 15, 35, 46, 16]\n//33\n    , [17, 145, 115, 1, 146, 116]\n    , [14, 74, 46, 21, 75, 47]\n    , [29, 54, 24, 19, 55, 25]\n    , [11, 45, 15, 46, 46, 16]\n//34\n    , [13, 145, 115, 6, 146, 116]\n    , [14, 74, 46, 23, 75, 47]\n    , [44, 54, 24, 7, 55, 25]\n    , [59, 46, 16, 1, 47, 17]\n//35\n    , [12, 151, 121, 7, 152, 122]\n    , [12, 75, 47, 26, 76, 48]\n    , [39, 54, 24, 14, 55, 25]\n    , [22, 45, 15, 41, 46, 16]\n//36\n    , [6, 151, 121, 14, 152, 122]\n    , [6, 75, 47, 34, 76, 48]\n    , [46, 54, 24, 10, 55, 25]\n    , [2, 45, 15, 64, 46, 16]\n//37\n    , [17, 152, 122, 4, 153, 123]\n    , [29, 74, 46, 14, 75, 47]\n    , [49, 54, 24, 10, 55, 25]\n    , [24, 45, 15, 46, 46, 16]\n//38\n    , [4, 152, 122, 18, 153, 123]\n    , [13, 74, 46, 32, 75, 47]\n    , [48, 54, 24, 14, 55, 25]\n    , [42, 45, 15, 32, 46, 16]\n//39\n    , [20, 147, 117, 4, 148, 118]\n    , [40, 75, 47, 7, 76, 48]\n    , [43, 54, 24, 22, 55, 25]\n    , [10, 45, 15, 67, 46, 16]\n//40\n    , [19, 148, 118, 6, 149, 119]\n    , [18, 75, 47, 31, 76, 48]\n    , [34, 54, 24, 34, 55, 25]\n    , [20, 45, 15, 61, 46, 16]\n];\n\nQRRSBlock.getRSBlocks = function (typeNumber, errorCorrectLevel) {\n\n    var rsBlock = QRRSBlock.getRsBlockTable(typeNumber, errorCorrectLevel);\n\n    if (rsBlock == undefined) {\n        throw new Error(\"bad rs block @ typeNumber:\" + typeNumber + \"/errorCorrectLevel:\" + errorCorrectLevel);\n    }\n\n    var length = rsBlock.length / 3;\n\n    var list = new Array();\n\n    for (var i = 0; i < length; i++) {\n\n        var count = rsBlock[i * 3 + 0];\n        var totalCount = rsBlock[i * 3 + 1];\n        var dataCount = rsBlock[i * 3 + 2];\n\n        for (var j = 0; j < count; j++) {\n            list.push(new QRRSBlock(totalCount, dataCount));\n        }\n    }\n\n    return list;\n}\n\nQRRSBlock.getRsBlockTable = function (typeNumber, errorCorrectLevel) {\n\n    switch (errorCorrectLevel) {\n        case QRErrorCorrectLevel.L :\n            return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 0];\n        case QRErrorCorrectLevel.M :\n            return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 1];\n        case QRErrorCorrectLevel.Q :\n            return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 2];\n        case QRErrorCorrectLevel.H :\n            return QRRSBlock.RS_BLOCK_TABLE[(typeNumber - 1) * 4 + 3];\n        default :\n            return undefined;\n    }\n}\n\n//---------------------------------------------------------------------\n// QRBitBuffer\n//---------------------------------------------------------------------\n\nfunction QRBitBuffer() {\n    this.buffer = new Array();\n    this.length = 0;\n}\n\nQRBitBuffer.prototype = {\n\n    get: function (index) {\n        var bufIndex = Math.floor(index / 8);\n        return ( (this.buffer[bufIndex] >>> (7 - index % 8) ) & 1) == 1;\n    },\n\n    put: function (num, length) {\n        for (var i = 0; i < length; i++) {\n            this.putBit(( (num >>> (length - i - 1) ) & 1) == 1);\n        }\n    },\n\n    getLengthInBits: function () {\n        return this.length;\n    },\n\n    putBit: function (bit) {\n\n        var bufIndex = Math.floor(this.length / 8);\n        if (this.buffer.length <= bufIndex) {\n            this.buffer.push(0);\n        }\n\n        if (bit) {\n            this.buffer[bufIndex] |= (0x80 >>> (this.length % 8) );\n        }\n\n        this.length++;\n    }\n};\n\nexports.QRCapacityTable = [\n    [17,14,11,7]\n    ,[32,26,20,14]\n    ,[53,42,32,24]\n    ,[78,62,46,34]\n    ,[106,84,60,44]\n    ,[134,106,74,58]\n    ,[154,122,86,64]\n    ,[192,152,108,84]\n    ,[230,180,130,98]\n    ,[271,213,151,119]\n    ,[321,251,177,137]//11\n    ,[367,287,203,155]\n    ,[425,331,241,177]\n    ,[458,362,258,194]\n    ,[520,412,292,220]\n    ,[586,450,322,250]\n    ,[644,504,364,280]\n    ,[718,560,394,310]\n    ,[792,624,442,338]\n    ,[858,666,482,382]\n    ,[929,711,509,403]\n    ,[1003,779,565,439]\n    ,[1091,857,611,461]\n    ,[1171,911,661,511]//24\n    ,[1273,997,715,535]\n    ,[1367,1059,751,593]\n    ,[1465,1125,805,625]\n    ,[1528,1190,868,658]//28\n    ,[1628,1264,908,698]\n    ,[1732,1370,982,742]\n    ,[1840,1452,1030,790]\n    ,[1952,1538,1112,842]//32\n    ,[2068,1628,1168,898]\n    ,[2188,1722,1228,958]\n    ,[2303,1809,1283,983]\n    ,[2431,1911,1351,1051]//36\n    ,[2563,1989,1423,1093]\n    ,[2699,2099,1499,1139]\n    ,[2809,2213,1579,1219]\n    ,[2953,2331,1663,1273]//40\n];\n\nfunction UTF8Array(source) {\n    if (Array.isArray(source)) {\n        return new Uint8Array(source);\n    }\n\n    return from_utf(source);\n}\n\nexports.UTF8Array = UTF8Array;\n\nfunction from_utf(str) {\n    var arr = [], code;\n\n    for (var i = 0, len = str.length; i < len; ++i) {\n        code = fixed_cca(str, i);\n\n        if (code === false) {\n            continue;\n        }\n\n        if (code < 0x80) {\n            arr[arr.length] = code;\n\n            continue;\n        }\n\n        codepoint_to_bytes(arr, code);\n    }\n\n    return new Uint8Array(arr);\n}\n\nfunction codepoint_to_bytes(arr, code) {\n    // find MSB, use that to determine byte count\n    var copy_code = code\n        , bit_count = 0\n        , byte_count\n        , prefix\n        , _byte\n        , pos;\n\n    do {\n        ++bit_count;\n    } while (copy_code >>>= 1);\n\n    byte_count = Math.ceil((bit_count - 1) / 5) | 0;\n    prefix = [0, 0, 0xc0, 0xe0, 0xf0, 0xf8, 0xfc][byte_count];\n    pos = [0, 0, 3, 4, 5, 6, 7][byte_count];\n\n    _byte |= prefix;\n\n    bit_count = (7 - pos) + 6 * (byte_count - 1);\n\n    while (bit_count) {\n        _byte |= +!!(code & (1 << bit_count)) << (7 - pos);\n        ++pos;\n\n        if (pos % 8 === 0) {\n            arr[arr.length] = _byte;\n            _byte = 0x80;\n            pos = 2;\n        }\n\n        --bit_count;\n    }\n\n    if (pos) {\n        _byte |= +!!(code & 1) << (7 - pos);\n        arr[arr.length] = _byte;\n    }\n}\n\nfunction fixed_cca(str, idx) {\n    idx = idx || 0;\n\n    var code = str.charCodeAt(idx)\n        , lo\n        , hi;\n\n    if (0xD800 <= code && code <= 0xDBFF) {\n        lo = str.charCodeAt(idx + 1);\n        hi = code;\n\n        if (isNaN(lo)) {\n            throw new Error('High surrogate not followed by low surrogate');\n        }\n\n        return ((hi - 0xD800) * 0x400) + (lo - 0xDC00) + 0x10000;\n    }\n\n    if (0xDC00 <= code && code <= 0xDFFF) {\n        return false;\n    }\n\n    return code;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/qrcode.js\n **/"],"sourceRoot":""}